
Test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  000002c8  0000035c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000002c8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000025  00800106  00800106  00000362  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000362  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000394  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000098  00000000  00000000  000003d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000bbe  00000000  00000000  0000046c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008d8  00000000  00000000  0000102a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000579  00000000  00000000  00001902  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000019c  00000000  00000000  00001e7c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000500  00000000  00000000  00002018  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000039c  00000000  00000000  00002518  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000088  00000000  00000000  000028b4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 79 00 	jmp	0xf2	; 0xf2 <__vector_11>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e8 ec       	ldi	r30, 0xC8	; 200
  7c:	f2 e0       	ldi	r31, 0x02	; 2
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a6 30       	cpi	r26, 0x06	; 6
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a6 e0       	ldi	r26, 0x06	; 6
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	ab 32       	cpi	r26, 0x2B	; 43
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 18 01 	call	0x230	; 0x230 <main>
  9e:	0c 94 62 01 	jmp	0x2c4	; 0x2c4 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <SCH_Delete_Task>:
//______________Start code voor ledjes________________
int lampjes(void){
		PORTD |= _BV(2);
		_delay_ms(1000);
		PORTD &= ~(_BV(2));
}
  a6:	27 e0       	ldi	r18, 0x07	; 7
  a8:	82 9f       	mul	r24, r18
  aa:	c0 01       	movw	r24, r0
  ac:	11 24       	eor	r1, r1
  ae:	fc 01       	movw	r30, r24
  b0:	e8 5f       	subi	r30, 0xF8	; 248
  b2:	fe 4f       	sbci	r31, 0xFE	; 254
  b4:	11 82       	std	Z+1, r1	; 0x01
  b6:	10 82       	st	Z, r1
  b8:	13 82       	std	Z+3, r1	; 0x03
  ba:	12 82       	std	Z+2, r1	; 0x02
  bc:	15 82       	std	Z+5, r1	; 0x05
  be:	14 82       	std	Z+4, r1	; 0x04
  c0:	16 82       	std	Z+6, r1	; 0x06
  c2:	80 e0       	ldi	r24, 0x00	; 0
  c4:	08 95       	ret

000000c6 <SCH_Init_T1>:
  c6:	cf 93       	push	r28
  c8:	c0 e0       	ldi	r28, 0x00	; 0
  ca:	8c 2f       	mov	r24, r28
  cc:	0e 94 53 00 	call	0xa6	; 0xa6 <SCH_Delete_Task>
  d0:	cf 5f       	subi	r28, 0xFF	; 255
  d2:	c5 30       	cpi	r28, 0x05	; 5
  d4:	d1 f7       	brne	.-12     	; 0xca <SCH_Init_T1+0x4>
  d6:	81 e7       	ldi	r24, 0x71	; 113
  d8:	92 e0       	ldi	r25, 0x02	; 2
  da:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
  de:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
  e2:	8c e0       	ldi	r24, 0x0C	; 12
  e4:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
  e8:	82 e0       	ldi	r24, 0x02	; 2
  ea:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
  ee:	cf 91       	pop	r28
  f0:	08 95       	ret

000000f2 <__vector_11>:
  f2:	1f 92       	push	r1
  f4:	0f 92       	push	r0
  f6:	0f b6       	in	r0, 0x3f	; 63
  f8:	0f 92       	push	r0
  fa:	11 24       	eor	r1, r1
  fc:	2f 93       	push	r18
  fe:	3f 93       	push	r19
 100:	8f 93       	push	r24
 102:	9f 93       	push	r25
 104:	af 93       	push	r26
 106:	bf 93       	push	r27
 108:	ef 93       	push	r30
 10a:	ff 93       	push	r31
 10c:	e8 e0       	ldi	r30, 0x08	; 8
 10e:	f1 e0       	ldi	r31, 0x01	; 1
 110:	2b e2       	ldi	r18, 0x2B	; 43
 112:	31 e0       	ldi	r19, 0x01	; 1
 114:	80 81       	ld	r24, Z
 116:	91 81       	ldd	r25, Z+1	; 0x01
 118:	89 2b       	or	r24, r25
 11a:	91 f0       	breq	.+36     	; 0x140 <__vector_11+0x4e>
 11c:	82 81       	ldd	r24, Z+2	; 0x02
 11e:	93 81       	ldd	r25, Z+3	; 0x03
 120:	00 97       	sbiw	r24, 0x00	; 0
 122:	59 f4       	brne	.+22     	; 0x13a <__vector_11+0x48>
 124:	86 81       	ldd	r24, Z+6	; 0x06
 126:	8f 5f       	subi	r24, 0xFF	; 255
 128:	86 83       	std	Z+6, r24	; 0x06
 12a:	84 81       	ldd	r24, Z+4	; 0x04
 12c:	95 81       	ldd	r25, Z+5	; 0x05
 12e:	00 97       	sbiw	r24, 0x00	; 0
 130:	39 f0       	breq	.+14     	; 0x140 <__vector_11+0x4e>
 132:	01 97       	sbiw	r24, 0x01	; 1
 134:	93 83       	std	Z+3, r25	; 0x03
 136:	82 83       	std	Z+2, r24	; 0x02
 138:	03 c0       	rjmp	.+6      	; 0x140 <__vector_11+0x4e>
 13a:	01 97       	sbiw	r24, 0x01	; 1
 13c:	93 83       	std	Z+3, r25	; 0x03
 13e:	82 83       	std	Z+2, r24	; 0x02
 140:	37 96       	adiw	r30, 0x07	; 7
 142:	e2 17       	cp	r30, r18
 144:	f3 07       	cpc	r31, r19
 146:	31 f7       	brne	.-52     	; 0x114 <__vector_11+0x22>
 148:	ff 91       	pop	r31
 14a:	ef 91       	pop	r30
 14c:	bf 91       	pop	r27
 14e:	af 91       	pop	r26
 150:	9f 91       	pop	r25
 152:	8f 91       	pop	r24
 154:	3f 91       	pop	r19
 156:	2f 91       	pop	r18
 158:	0f 90       	pop	r0
 15a:	0f be       	out	0x3f, r0	; 63
 15c:	0f 90       	pop	r0
 15e:	1f 90       	pop	r1
 160:	18 95       	reti

00000162 <init_ports>:
 162:	52 9a       	sbi	0x0a, 2	; 10
 164:	08 95       	ret

00000166 <init_adc>:
 166:	80 e6       	ldi	r24, 0x60	; 96
 168:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
 16c:	87 e8       	ldi	r24, 0x87	; 135
 16e:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
 172:	08 95       	ret

00000174 <get_adc_value>:
 174:	ea e7       	ldi	r30, 0x7A	; 122
 176:	f0 e0       	ldi	r31, 0x00	; 0
 178:	80 81       	ld	r24, Z
 17a:	80 64       	ori	r24, 0x40	; 64
 17c:	80 83       	st	Z, r24
 17e:	80 81       	ld	r24, Z
 180:	86 fd       	sbrc	r24, 6
 182:	fd cf       	rjmp	.-6      	; 0x17e <get_adc_value+0xa>
 184:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 188:	08 95       	ret

0000018a <uart_init>:
 18a:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 18e:	83 e3       	ldi	r24, 0x33	; 51
 190:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
 194:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
 198:	88 e1       	ldi	r24, 0x18	; 24
 19a:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 19e:	86 e0       	ldi	r24, 0x06	; 6
 1a0:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
 1a4:	08 95       	ret

000001a6 <transmit>:
 1a6:	e0 ec       	ldi	r30, 0xC0	; 192
 1a8:	f0 e0       	ldi	r31, 0x00	; 0
 1aa:	90 81       	ld	r25, Z
 1ac:	95 ff       	sbrs	r25, 5
 1ae:	fd cf       	rjmp	.-6      	; 0x1aa <transmit+0x4>
 1b0:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 1b4:	08 95       	ret

000001b6 <USART_putstring>:
 1b6:	cf 93       	push	r28
 1b8:	df 93       	push	r29
 1ba:	ec 01       	movw	r28, r24
 1bc:	88 81       	ld	r24, Y
 1be:	88 23       	and	r24, r24
 1c0:	31 f0       	breq	.+12     	; 0x1ce <USART_putstring+0x18>
 1c2:	21 96       	adiw	r28, 0x01	; 1
 1c4:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <transmit>
 1c8:	89 91       	ld	r24, Y+
 1ca:	81 11       	cpse	r24, r1
 1cc:	fb cf       	rjmp	.-10     	; 0x1c4 <USART_putstring+0xe>
 1ce:	df 91       	pop	r29
 1d0:	cf 91       	pop	r28
 1d2:	08 95       	ret

000001d4 <serial_conn>:
 1d4:	cf 93       	push	r28
 1d6:	df 93       	push	r29
 1d8:	cd b7       	in	r28, 0x3d	; 61
 1da:	de b7       	in	r29, 0x3e	; 62
 1dc:	2a 97       	sbiw	r28, 0x0a	; 10
 1de:	0f b6       	in	r0, 0x3f	; 63
 1e0:	f8 94       	cli
 1e2:	de bf       	out	0x3e, r29	; 62
 1e4:	0f be       	out	0x3f, r0	; 63
 1e6:	cd bf       	out	0x3d, r28	; 61
 1e8:	80 e0       	ldi	r24, 0x00	; 0
 1ea:	91 e0       	ldi	r25, 0x01	; 1
 1ec:	0e 94 db 00 	call	0x1b6	; 0x1b6 <USART_putstring>
 1f0:	0e 94 ba 00 	call	0x174	; 0x174 <get_adc_value>
 1f4:	90 e0       	ldi	r25, 0x00	; 0
 1f6:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <__data_end+0x1>
 1fa:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <__data_end>
 1fe:	4a e0       	ldi	r20, 0x0A	; 10
 200:	50 e0       	ldi	r21, 0x00	; 0
 202:	be 01       	movw	r22, r28
 204:	6f 5f       	subi	r22, 0xFF	; 255
 206:	7f 4f       	sbci	r23, 0xFF	; 255
 208:	0e 94 22 01 	call	0x244	; 0x244 <itoa>
 20c:	ce 01       	movw	r24, r28
 20e:	01 96       	adiw	r24, 0x01	; 1
 210:	0e 94 db 00 	call	0x1b6	; 0x1b6 <USART_putstring>
 214:	83 e0       	ldi	r24, 0x03	; 3
 216:	91 e0       	ldi	r25, 0x01	; 1
 218:	0e 94 db 00 	call	0x1b6	; 0x1b6 <USART_putstring>
 21c:	2f ef       	ldi	r18, 0xFF	; 255
 21e:	83 e2       	ldi	r24, 0x23	; 35
 220:	94 ef       	ldi	r25, 0xF4	; 244
 222:	21 50       	subi	r18, 0x01	; 1
 224:	80 40       	sbci	r24, 0x00	; 0
 226:	90 40       	sbci	r25, 0x00	; 0
 228:	e1 f7       	brne	.-8      	; 0x222 <serial_conn+0x4e>
 22a:	00 c0       	rjmp	.+0      	; 0x22c <serial_conn+0x58>
 22c:	00 00       	nop
 22e:	dc cf       	rjmp	.-72     	; 0x1e8 <serial_conn+0x14>

00000230 <main>:
	//initialisatie functies
	/*
	* bijvoorbeeld init_ports();
	*
	*/
	init_ports();
 230:	0e 94 b1 00 	call	0x162	; 0x162 <init_ports>
	uart_init();
 234:	0e 94 c5 00 	call	0x18a	; 0x18a <uart_init>
	init_adc();
 238:	0e 94 b3 00 	call	0x166	; 0x166 <init_adc>
	
	SCH_Init_T1();
 23c:	0e 94 63 00 	call	0xc6	; 0xc6 <SCH_Init_T1>
	
	// taken uitvoeren en taken die in de scheduler moeten
	// bijvoorbeeld SCH_Add_Task(sensor_start, 0, 50);
	
	SCH_Add_Task(serial_conn(), 0, 5);
 240:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <serial_conn>

00000244 <itoa>:
 244:	45 32       	cpi	r20, 0x25	; 37
 246:	51 05       	cpc	r21, r1
 248:	20 f4       	brcc	.+8      	; 0x252 <itoa+0xe>
 24a:	42 30       	cpi	r20, 0x02	; 2
 24c:	10 f0       	brcs	.+4      	; 0x252 <itoa+0xe>
 24e:	0c 94 2d 01 	jmp	0x25a	; 0x25a <__itoa_ncheck>
 252:	fb 01       	movw	r30, r22
 254:	10 82       	st	Z, r1
 256:	cb 01       	movw	r24, r22
 258:	08 95       	ret

0000025a <__itoa_ncheck>:
 25a:	bb 27       	eor	r27, r27
 25c:	4a 30       	cpi	r20, 0x0A	; 10
 25e:	31 f4       	brne	.+12     	; 0x26c <__itoa_ncheck+0x12>
 260:	99 23       	and	r25, r25
 262:	22 f4       	brpl	.+8      	; 0x26c <__itoa_ncheck+0x12>
 264:	bd e2       	ldi	r27, 0x2D	; 45
 266:	90 95       	com	r25
 268:	81 95       	neg	r24
 26a:	9f 4f       	sbci	r25, 0xFF	; 255
 26c:	0c 94 39 01 	jmp	0x272	; 0x272 <__utoa_common>

00000270 <__utoa_ncheck>:
 270:	bb 27       	eor	r27, r27

00000272 <__utoa_common>:
 272:	fb 01       	movw	r30, r22
 274:	55 27       	eor	r21, r21
 276:	aa 27       	eor	r26, r26
 278:	88 0f       	add	r24, r24
 27a:	99 1f       	adc	r25, r25
 27c:	aa 1f       	adc	r26, r26
 27e:	a4 17       	cp	r26, r20
 280:	10 f0       	brcs	.+4      	; 0x286 <__utoa_common+0x14>
 282:	a4 1b       	sub	r26, r20
 284:	83 95       	inc	r24
 286:	50 51       	subi	r21, 0x10	; 16
 288:	b9 f7       	brne	.-18     	; 0x278 <__utoa_common+0x6>
 28a:	a0 5d       	subi	r26, 0xD0	; 208
 28c:	aa 33       	cpi	r26, 0x3A	; 58
 28e:	08 f0       	brcs	.+2      	; 0x292 <__utoa_common+0x20>
 290:	a9 5d       	subi	r26, 0xD9	; 217
 292:	a1 93       	st	Z+, r26
 294:	00 97       	sbiw	r24, 0x00	; 0
 296:	79 f7       	brne	.-34     	; 0x276 <__utoa_common+0x4>
 298:	b1 11       	cpse	r27, r1
 29a:	b1 93       	st	Z+, r27
 29c:	11 92       	st	Z+, r1
 29e:	cb 01       	movw	r24, r22
 2a0:	0c 94 52 01 	jmp	0x2a4	; 0x2a4 <strrev>

000002a4 <strrev>:
 2a4:	dc 01       	movw	r26, r24
 2a6:	fc 01       	movw	r30, r24
 2a8:	67 2f       	mov	r22, r23
 2aa:	71 91       	ld	r23, Z+
 2ac:	77 23       	and	r23, r23
 2ae:	e1 f7       	brne	.-8      	; 0x2a8 <strrev+0x4>
 2b0:	32 97       	sbiw	r30, 0x02	; 2
 2b2:	04 c0       	rjmp	.+8      	; 0x2bc <strrev+0x18>
 2b4:	7c 91       	ld	r23, X
 2b6:	6d 93       	st	X+, r22
 2b8:	70 83       	st	Z, r23
 2ba:	62 91       	ld	r22, -Z
 2bc:	ae 17       	cp	r26, r30
 2be:	bf 07       	cpc	r27, r31
 2c0:	c8 f3       	brcs	.-14     	; 0x2b4 <strrev+0x10>
 2c2:	08 95       	ret

000002c4 <_exit>:
 2c4:	f8 94       	cli

000002c6 <__stop_program>:
 2c6:	ff cf       	rjmp	.-2      	; 0x2c6 <__stop_program>
