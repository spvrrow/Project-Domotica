
Eindproduct.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000008  00800100  000002fa  0000038e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000002fa  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000007  00800108  00800108  00000396  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000396  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000003c8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  00000408  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000ba1  00000000  00000000  00000490  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008bc  00000000  00000000  00001031  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004ce  00000000  00000000  000018ed  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000158  00000000  00000000  00001dbc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004b2  00000000  00000000  00001f14  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000002c8  00000000  00000000  000023c6  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000078  00000000  00000000  0000268e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 85 00 	jmp	0x10a	; 0x10a <__vector_2>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__vector_16>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ea ef       	ldi	r30, 0xFA	; 250
  7c:	f2 e0       	ldi	r31, 0x02	; 2
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a8 30       	cpi	r26, 0x08	; 8
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a8 e0       	ldi	r26, 0x08	; 8
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	af 30       	cpi	r26, 0x0F	; 15
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 26 01 	call	0x24c	; 0x24c <main>
  9e:	0c 94 7b 01 	jmp	0x2f6	; 0x2f6 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <init_ports>:
	 }
 }
 if(i == 1){
	 PORTB &= ~(1 << 2);
	 PORTB |= _BV(0);
	 knipper();
  a6:	80 e1       	ldi	r24, 0x10	; 16
  a8:	8a b9       	out	0x0a, r24	; 10
  aa:	87 ef       	ldi	r24, 0xF7	; 247
  ac:	8a b9       	out	0x0a, r24	; 10
  ae:	8f ef       	ldi	r24, 0xFF	; 255
  b0:	84 b9       	out	0x04, r24	; 4
  b2:	08 95       	ret

000000b4 <init_distance>:
  b4:	e9 e6       	ldi	r30, 0x69	; 105
  b6:	f0 e0       	ldi	r31, 0x00	; 0
  b8:	80 81       	ld	r24, Z
  ba:	84 60       	ori	r24, 0x04	; 4
  bc:	80 83       	st	Z, r24
  be:	e9 9a       	sbi	0x1d, 1	; 29
  c0:	14 bc       	out	0x24, r1	; 36
  c2:	83 e0       	ldi	r24, 0x03	; 3
  c4:	85 bd       	out	0x25, r24	; 37
  c6:	81 e0       	ldi	r24, 0x01	; 1
  c8:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7e006e>
  cc:	54 9a       	sbi	0x0a, 4	; 10
  ce:	08 95       	ret

000000d0 <__vector_16>:
  d0:	1f 92       	push	r1
  d2:	0f 92       	push	r0
  d4:	0f b6       	in	r0, 0x3f	; 63
  d6:	0f 92       	push	r0
  d8:	11 24       	eor	r1, r1
  da:	8f 93       	push	r24
  dc:	9f 93       	push	r25
  de:	80 91 0d 01 	lds	r24, 0x010D	; 0x80010d <gv_counter>
  e2:	90 91 0e 01 	lds	r25, 0x010E	; 0x80010e <gv_counter+0x1>
  e6:	93 95       	inc	r25
  e8:	90 93 0e 01 	sts	0x010E, r25	; 0x80010e <gv_counter+0x1>
  ec:	80 93 0d 01 	sts	0x010D, r24	; 0x80010d <gv_counter>
  f0:	9f 91       	pop	r25
  f2:	8f 91       	pop	r24
  f4:	0f 90       	pop	r0
  f6:	0f be       	out	0x3f, r0	; 63
  f8:	0f 90       	pop	r0
  fa:	1f 90       	pop	r1
  fc:	18 95       	reti

000000fe <afstand_meter>:
  fe:	5c 9a       	sbi	0x0b, 4	; 11
 100:	80 e4       	ldi	r24, 0x40	; 64
 102:	8a 95       	dec	r24
 104:	f1 f7       	brne	.-4      	; 0x102 <afstand_meter+0x4>
 106:	5c 98       	cbi	0x0b, 4	; 11
 108:	08 95       	ret

0000010a <__vector_2>:
 10a:	1f 92       	push	r1
 10c:	0f 92       	push	r0
 10e:	0f b6       	in	r0, 0x3f	; 63
 110:	0f 92       	push	r0
 112:	11 24       	eor	r1, r1
 114:	2f 93       	push	r18
 116:	3f 93       	push	r19
 118:	6f 93       	push	r22
 11a:	7f 93       	push	r23
 11c:	8f 93       	push	r24
 11e:	9f 93       	push	r25
 120:	af 93       	push	r26
 122:	bf 93       	push	r27
 124:	4b 9b       	sbis	0x09, 3	; 9
 126:	06 c0       	rjmp	.+12     	; 0x134 <__vector_2+0x2a>
 128:	16 bc       	out	0x26, r1	; 38
 12a:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <time+0x1>
 12e:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <time>
 132:	1d c0       	rjmp	.+58     	; 0x16e <__vector_2+0x64>
 134:	86 b5       	in	r24, 0x26	; 38
 136:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <time>
 13a:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <time+0x1>
 13e:	28 0f       	add	r18, r24
 140:	31 1d       	adc	r19, r1
 142:	30 93 0b 01 	sts	0x010B, r19	; 0x80010b <time+0x1>
 146:	20 93 0a 01 	sts	0x010A, r18	; 0x80010a <time>
 14a:	22 0f       	add	r18, r18
 14c:	33 1f       	adc	r19, r19
 14e:	22 0f       	add	r18, r18
 150:	33 1f       	adc	r19, r19
 152:	af e9       	ldi	r26, 0x9F	; 159
 154:	b6 e4       	ldi	r27, 0x46	; 70
 156:	0e 94 2c 01 	call	0x258	; 0x258 <__umulhisi3>
 15a:	92 95       	swap	r25
 15c:	82 95       	swap	r24
 15e:	8f 70       	andi	r24, 0x0F	; 15
 160:	89 27       	eor	r24, r25
 162:	9f 70       	andi	r25, 0x0F	; 15
 164:	89 27       	eor	r24, r25
 166:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <__data_end+0x1>
 16a:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <__data_end>
 16e:	bf 91       	pop	r27
 170:	af 91       	pop	r26
 172:	9f 91       	pop	r25
 174:	8f 91       	pop	r24
 176:	7f 91       	pop	r23
 178:	6f 91       	pop	r22
 17a:	3f 91       	pop	r19
 17c:	2f 91       	pop	r18
 17e:	0f 90       	pop	r0
 180:	0f be       	out	0x3f, r0	; 63
 182:	0f 90       	pop	r0
 184:	1f 90       	pop	r1
 186:	18 95       	reti

00000188 <uart_init>:
 188:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 18c:	83 e3       	ldi	r24, 0x33	; 51
 18e:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
 192:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
 196:	88 e0       	ldi	r24, 0x08	; 8
 198:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 19c:	86 e0       	ldi	r24, 0x06	; 6
 19e:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
 1a2:	08 95       	ret

000001a4 <transmit>:
 1a4:	e0 ec       	ldi	r30, 0xC0	; 192
 1a6:	f0 e0       	ldi	r31, 0x00	; 0
 1a8:	90 81       	ld	r25, Z
 1aa:	95 ff       	sbrs	r25, 5
 1ac:	fd cf       	rjmp	.-6      	; 0x1a8 <transmit+0x4>
 1ae:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 1b2:	08 95       	ret

000001b4 <USART_putstring>:
 1b4:	cf 93       	push	r28
 1b6:	df 93       	push	r29
 1b8:	ec 01       	movw	r28, r24
 1ba:	88 81       	ld	r24, Y
 1bc:	88 23       	and	r24, r24
 1be:	31 f0       	breq	.+12     	; 0x1cc <USART_putstring+0x18>
 1c0:	21 96       	adiw	r28, 0x01	; 1
 1c2:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <transmit>
 1c6:	89 91       	ld	r24, Y+
 1c8:	81 11       	cpse	r24, r1
 1ca:	fb cf       	rjmp	.-10     	; 0x1c2 <USART_putstring+0xe>
 1cc:	df 91       	pop	r29
 1ce:	cf 91       	pop	r28
 1d0:	08 95       	ret

000001d2 <serial_conn>:
 1d2:	cf 93       	push	r28
 1d4:	df 93       	push	r29
 1d6:	cd b7       	in	r28, 0x3d	; 61
 1d8:	de b7       	in	r29, 0x3e	; 62
 1da:	28 97       	sbiw	r28, 0x08	; 8
 1dc:	0f b6       	in	r0, 0x3f	; 63
 1de:	f8 94       	cli
 1e0:	de bf       	out	0x3e, r29	; 62
 1e2:	0f be       	out	0x3f, r0	; 63
 1e4:	cd bf       	out	0x3d, r28	; 61
 1e6:	0e 94 c4 00 	call	0x188	; 0x188 <uart_init>
 1ea:	0e 94 7f 00 	call	0xfe	; 0xfe <afstand_meter>
 1ee:	84 e0       	ldi	r24, 0x04	; 4
 1f0:	91 e0       	ldi	r25, 0x01	; 1
 1f2:	0e 94 da 00 	call	0x1b4	; 0x1b4 <USART_putstring>
 1f6:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <time>
 1fa:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <time+0x1>
 1fe:	22 0f       	add	r18, r18
 200:	33 1f       	adc	r19, r19
 202:	22 0f       	add	r18, r18
 204:	33 1f       	adc	r19, r19
 206:	af e9       	ldi	r26, 0x9F	; 159
 208:	b6 e4       	ldi	r27, 0x46	; 70
 20a:	0e 94 2c 01 	call	0x258	; 0x258 <__umulhisi3>
 20e:	4a e0       	ldi	r20, 0x0A	; 10
 210:	50 e0       	ldi	r21, 0x00	; 0
 212:	be 01       	movw	r22, r28
 214:	6f 5f       	subi	r22, 0xFF	; 255
 216:	7f 4f       	sbci	r23, 0xFF	; 255
 218:	92 95       	swap	r25
 21a:	82 95       	swap	r24
 21c:	8f 70       	andi	r24, 0x0F	; 15
 21e:	89 27       	eor	r24, r25
 220:	9f 70       	andi	r25, 0x0F	; 15
 222:	89 27       	eor	r24, r25
 224:	0e 94 3b 01 	call	0x276	; 0x276 <itoa>
 228:	ce 01       	movw	r24, r28
 22a:	01 96       	adiw	r24, 0x01	; 1
 22c:	0e 94 da 00 	call	0x1b4	; 0x1b4 <USART_putstring>
 230:	80 e0       	ldi	r24, 0x00	; 0
 232:	91 e0       	ldi	r25, 0x01	; 1
 234:	0e 94 da 00 	call	0x1b4	; 0x1b4 <USART_putstring>
 238:	2f ef       	ldi	r18, 0xFF	; 255
 23a:	8b e7       	ldi	r24, 0x7B	; 123
 23c:	92 e9       	ldi	r25, 0x92	; 146
 23e:	21 50       	subi	r18, 0x01	; 1
 240:	80 40       	sbci	r24, 0x00	; 0
 242:	90 40       	sbci	r25, 0x00	; 0
 244:	e1 f7       	brne	.-8      	; 0x23e <serial_conn+0x6c>
 246:	00 c0       	rjmp	.+0      	; 0x248 <serial_conn+0x76>
 248:	00 00       	nop
 24a:	cf cf       	rjmp	.-98     	; 0x1ea <serial_conn+0x18>

0000024c <main>:
 }
}

int main(void)
{
	init_ports();
 24c:	0e 94 53 00 	call	0xa6	; 0xa6 <init_ports>
	init_distance();
 250:	0e 94 5a 00 	call	0xb4	; 0xb4 <init_distance>
	while(1){

	serial_conn();
 254:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <serial_conn>

00000258 <__umulhisi3>:
 258:	a2 9f       	mul	r26, r18
 25a:	b0 01       	movw	r22, r0
 25c:	b3 9f       	mul	r27, r19
 25e:	c0 01       	movw	r24, r0
 260:	a3 9f       	mul	r26, r19
 262:	70 0d       	add	r23, r0
 264:	81 1d       	adc	r24, r1
 266:	11 24       	eor	r1, r1
 268:	91 1d       	adc	r25, r1
 26a:	b2 9f       	mul	r27, r18
 26c:	70 0d       	add	r23, r0
 26e:	81 1d       	adc	r24, r1
 270:	11 24       	eor	r1, r1
 272:	91 1d       	adc	r25, r1
 274:	08 95       	ret

00000276 <itoa>:
 276:	45 32       	cpi	r20, 0x25	; 37
 278:	51 05       	cpc	r21, r1
 27a:	20 f4       	brcc	.+8      	; 0x284 <itoa+0xe>
 27c:	42 30       	cpi	r20, 0x02	; 2
 27e:	10 f0       	brcs	.+4      	; 0x284 <itoa+0xe>
 280:	0c 94 46 01 	jmp	0x28c	; 0x28c <__itoa_ncheck>
 284:	fb 01       	movw	r30, r22
 286:	10 82       	st	Z, r1
 288:	cb 01       	movw	r24, r22
 28a:	08 95       	ret

0000028c <__itoa_ncheck>:
 28c:	bb 27       	eor	r27, r27
 28e:	4a 30       	cpi	r20, 0x0A	; 10
 290:	31 f4       	brne	.+12     	; 0x29e <__itoa_ncheck+0x12>
 292:	99 23       	and	r25, r25
 294:	22 f4       	brpl	.+8      	; 0x29e <__itoa_ncheck+0x12>
 296:	bd e2       	ldi	r27, 0x2D	; 45
 298:	90 95       	com	r25
 29a:	81 95       	neg	r24
 29c:	9f 4f       	sbci	r25, 0xFF	; 255
 29e:	0c 94 52 01 	jmp	0x2a4	; 0x2a4 <__utoa_common>

000002a2 <__utoa_ncheck>:
 2a2:	bb 27       	eor	r27, r27

000002a4 <__utoa_common>:
 2a4:	fb 01       	movw	r30, r22
 2a6:	55 27       	eor	r21, r21
 2a8:	aa 27       	eor	r26, r26
 2aa:	88 0f       	add	r24, r24
 2ac:	99 1f       	adc	r25, r25
 2ae:	aa 1f       	adc	r26, r26
 2b0:	a4 17       	cp	r26, r20
 2b2:	10 f0       	brcs	.+4      	; 0x2b8 <__utoa_common+0x14>
 2b4:	a4 1b       	sub	r26, r20
 2b6:	83 95       	inc	r24
 2b8:	50 51       	subi	r21, 0x10	; 16
 2ba:	b9 f7       	brne	.-18     	; 0x2aa <__utoa_common+0x6>
 2bc:	a0 5d       	subi	r26, 0xD0	; 208
 2be:	aa 33       	cpi	r26, 0x3A	; 58
 2c0:	08 f0       	brcs	.+2      	; 0x2c4 <__utoa_common+0x20>
 2c2:	a9 5d       	subi	r26, 0xD9	; 217
 2c4:	a1 93       	st	Z+, r26
 2c6:	00 97       	sbiw	r24, 0x00	; 0
 2c8:	79 f7       	brne	.-34     	; 0x2a8 <__utoa_common+0x4>
 2ca:	b1 11       	cpse	r27, r1
 2cc:	b1 93       	st	Z+, r27
 2ce:	11 92       	st	Z+, r1
 2d0:	cb 01       	movw	r24, r22
 2d2:	0c 94 6b 01 	jmp	0x2d6	; 0x2d6 <strrev>

000002d6 <strrev>:
 2d6:	dc 01       	movw	r26, r24
 2d8:	fc 01       	movw	r30, r24
 2da:	67 2f       	mov	r22, r23
 2dc:	71 91       	ld	r23, Z+
 2de:	77 23       	and	r23, r23
 2e0:	e1 f7       	brne	.-8      	; 0x2da <strrev+0x4>
 2e2:	32 97       	sbiw	r30, 0x02	; 2
 2e4:	04 c0       	rjmp	.+8      	; 0x2ee <strrev+0x18>
 2e6:	7c 91       	ld	r23, X
 2e8:	6d 93       	st	X+, r22
 2ea:	70 83       	st	Z, r23
 2ec:	62 91       	ld	r22, -Z
 2ee:	ae 17       	cp	r26, r30
 2f0:	bf 07       	cpc	r27, r31
 2f2:	c8 f3       	brcs	.-14     	; 0x2e6 <strrev+0x10>
 2f4:	08 95       	ret

000002f6 <_exit>:
 2f6:	f8 94       	cli

000002f8 <__stop_program>:
 2f8:	ff cf       	rjmp	.-2      	; 0x2f8 <__stop_program>
