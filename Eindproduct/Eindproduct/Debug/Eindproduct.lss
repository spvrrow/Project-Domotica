
Eindproduct.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001a  00800100  00000584  00000618  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000584  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000005  0080011a  0080011a  00000632  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000632  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000664  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  000006a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000bcb  00000000  00000000  0000072c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008c0  00000000  00000000  000012f7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004f5  00000000  00000000  00001bb7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000130  00000000  00000000  000020ac  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004b4  00000000  00000000  000021dc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000266  00000000  00000000  00002690  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000078  00000000  00000000  000028f6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 79 00 	jmp	0xf2	; 0xf2 <__vector_2>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e4 e8       	ldi	r30, 0x84	; 132
  7c:	f5 e0       	ldi	r31, 0x05	; 5
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	aa 31       	cpi	r26, 0x1A	; 26
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	aa e1       	ldi	r26, 0x1A	; 26
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	af 31       	cpi	r26, 0x1F	; 31
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 49 01 	call	0x292	; 0x292 <main>
  9e:	0c 94 c0 02 	jmp	0x580	; 0x580 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <init_ports>:
unsigned char USART_receive(void){
	
	while(!(UCSR0A & (1<<RXC0)));
	return UDR0;
	
}
  a6:	80 e1       	ldi	r24, 0x10	; 16
  a8:	8a b9       	out	0x0a, r24	; 10
  aa:	87 ef       	ldi	r24, 0xF7	; 247
  ac:	8a b9       	out	0x0a, r24	; 10
  ae:	8f ef       	ldi	r24, 0xFF	; 255
  b0:	84 b9       	out	0x04, r24	; 4
  b2:	08 95       	ret

000000b4 <init_timer>:
  b4:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
  b8:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
  bc:	08 95       	ret

000000be <init_ext_int>:
  be:	84 e0       	ldi	r24, 0x04	; 4
  c0:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__TEXT_REGION_LENGTH__+0x7e0069>
  c4:	82 e0       	ldi	r24, 0x02	; 2
  c6:	8d bb       	out	0x1d, r24	; 29
  c8:	08 95       	ret

000000ca <calc_cm>:
  ca:	60 91 1d 01 	lds	r22, 0x011D	; 0x80011d <gv_counter>
  ce:	70 91 1e 01 	lds	r23, 0x011E	; 0x80011e <gv_counter+0x1>
  d2:	76 95       	lsr	r23
  d4:	67 95       	ror	r22
  d6:	80 e0       	ldi	r24, 0x00	; 0
  d8:	90 e0       	ldi	r25, 0x00	; 0
  da:	0e 94 f2 01 	call	0x3e4	; 0x3e4 <__floatunsisf>
  de:	2d ec       	ldi	r18, 0xCD	; 205
  e0:	3c ec       	ldi	r19, 0xCC	; 204
  e2:	48 e6       	ldi	r20, 0x68	; 104
  e4:	52 e4       	ldi	r21, 0x42	; 66
  e6:	0e 94 51 01 	call	0x2a2	; 0x2a2 <__divsf3>
  ea:	0e 94 c3 01 	call	0x386	; 0x386 <__fixunssfsi>
  ee:	cb 01       	movw	r24, r22
  f0:	08 95       	ret

000000f2 <__vector_2>:
  f2:	1f 92       	push	r1
  f4:	0f 92       	push	r0
  f6:	0f b6       	in	r0, 0x3f	; 63
  f8:	0f 92       	push	r0
  fa:	11 24       	eor	r1, r1
  fc:	8f 93       	push	r24
  fe:	9f 93       	push	r25
 100:	ef 93       	push	r30
 102:	ff 93       	push	r31
 104:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <gv_echo>
 108:	81 30       	cpi	r24, 0x01	; 1
 10a:	61 f4       	brne	.+24     	; 0x124 <__vector_2+0x32>
 10c:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 110:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 114:	e1 e8       	ldi	r30, 0x81	; 129
 116:	f0 e0       	ldi	r31, 0x00	; 0
 118:	80 81       	ld	r24, Z
 11a:	82 60       	ori	r24, 0x02	; 2
 11c:	80 83       	st	Z, r24
 11e:	10 92 1c 01 	sts	0x011C, r1	; 0x80011c <gv_echo>
 122:	0a c0       	rjmp	.+20     	; 0x138 <__vector_2+0x46>
 124:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 128:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 12c:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 130:	90 93 1e 01 	sts	0x011E, r25	; 0x80011e <gv_counter+0x1>
 134:	80 93 1d 01 	sts	0x011D, r24	; 0x80011d <gv_counter>
 138:	ff 91       	pop	r31
 13a:	ef 91       	pop	r30
 13c:	9f 91       	pop	r25
 13e:	8f 91       	pop	r24
 140:	0f 90       	pop	r0
 142:	0f be       	out	0x3f, r0	; 63
 144:	0f 90       	pop	r0
 146:	1f 90       	pop	r1
 148:	18 95       	reti

0000014a <uart_init>:
 14a:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 14e:	83 e3       	ldi	r24, 0x33	; 51
 150:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
 154:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
 158:	88 e0       	ldi	r24, 0x08	; 8
 15a:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 15e:	86 e0       	ldi	r24, 0x06	; 6
 160:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
 164:	08 95       	ret

00000166 <transmit>:
 166:	e0 ec       	ldi	r30, 0xC0	; 192
 168:	f0 e0       	ldi	r31, 0x00	; 0
 16a:	90 81       	ld	r25, Z
 16c:	95 ff       	sbrs	r25, 5
 16e:	fd cf       	rjmp	.-6      	; 0x16a <transmit+0x4>
 170:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 174:	08 95       	ret

00000176 <USART_putstring>:
 176:	cf 93       	push	r28
 178:	df 93       	push	r29
 17a:	ec 01       	movw	r28, r24
 17c:	88 81       	ld	r24, Y
 17e:	88 23       	and	r24, r24
 180:	31 f0       	breq	.+12     	; 0x18e <USART_putstring+0x18>
 182:	21 96       	adiw	r28, 0x01	; 1
 184:	0e 94 b3 00 	call	0x166	; 0x166 <transmit>
 188:	89 91       	ld	r24, Y+
 18a:	81 11       	cpse	r24, r1
 18c:	fb cf       	rjmp	.-10     	; 0x184 <USART_putstring+0xe>
 18e:	df 91       	pop	r29
 190:	cf 91       	pop	r28
 192:	08 95       	ret

00000194 <knipper>:


// Start code voor lampjes
void knipper(){
	while(1){
		PORTB |= _BV(1);
 194:	29 9a       	sbi	0x05, 1	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 196:	2f ef       	ldi	r18, 0xFF	; 255
 198:	83 ec       	ldi	r24, 0xC3	; 195
 19a:	99 e0       	ldi	r25, 0x09	; 9
 19c:	21 50       	subi	r18, 0x01	; 1
 19e:	80 40       	sbci	r24, 0x00	; 0
 1a0:	90 40       	sbci	r25, 0x00	; 0
 1a2:	e1 f7       	brne	.-8      	; 0x19c <knipper+0x8>
 1a4:	00 c0       	rjmp	.+0      	; 0x1a6 <knipper+0x12>
 1a6:	00 00       	nop
		_delay_ms(200);
		PORTB &= ~(1 << 1); // set output low
 1a8:	29 98       	cbi	0x05, 1	; 5
 1aa:	2f ef       	ldi	r18, 0xFF	; 255
 1ac:	83 ec       	ldi	r24, 0xC3	; 195
 1ae:	99 e0       	ldi	r25, 0x09	; 9
 1b0:	21 50       	subi	r18, 0x01	; 1
 1b2:	80 40       	sbci	r24, 0x00	; 0
 1b4:	90 40       	sbci	r25, 0x00	; 0
 1b6:	e1 f7       	brne	.-8      	; 0x1b0 <knipper+0x1c>
 1b8:	00 c0       	rjmp	.+0      	; 0x1ba <knipper+0x26>
 1ba:	00 00       	nop
 1bc:	eb cf       	rjmp	.-42     	; 0x194 <knipper>

000001be <leds>:
		_delay_ms(200);
	}
	}

void leds(){
 if (i == 0){
 1be:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <__data_end>
 1c2:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <__data_end+0x1>
 1c6:	00 97       	sbiw	r24, 0x00	; 0
 1c8:	21 f4       	brne	.+8      	; 0x1d2 <leds+0x14>
	 PORTB |= _BV(2);
 1ca:	2a 9a       	sbi	0x05, 2	; 5
	 PORTB &= ~(1 << 0);
 1cc:	28 98       	cbi	0x05, 0	; 5
	 knipper();
 1ce:	0e 94 ca 00 	call	0x194	; 0x194 <knipper>
	 if (schermstatus == 1){
		 schermstatus = 0;
	 }
 }
 if(i == 1){
 1d2:	01 97       	sbiw	r24, 0x01	; 1
 1d4:	21 f4       	brne	.+8      	; 0x1de <leds+0x20>
	 PORTB &= ~(1 << 2);
 1d6:	2a 98       	cbi	0x05, 2	; 5
	 PORTB |= _BV(0);
 1d8:	28 9a       	sbi	0x05, 0	; 5
	 knipper();
 1da:	0e 94 ca 00 	call	0x194	; 0x194 <knipper>
 1de:	08 95       	ret

000001e0 <afstand_meter>:
	return (gv_counter / 2)/58.2;
}

int afstand_meter()
{
	sei();
 1e0:	78 94       	sei
		gv_echo = BEGIN;
 1e2:	81 e0       	ldi	r24, 0x01	; 1
 1e4:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <gv_echo>
		PORTD |= _BV(4);
 1e8:	5c 9a       	sbi	0x0b, 4	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1ea:	80 e4       	ldi	r24, 0x40	; 64
 1ec:	8a 95       	dec	r24
 1ee:	f1 f7       	brne	.-4      	; 0x1ec <afstand_meter+0xc>
		_delay_us(12);
		PORTD = 0x00;
 1f0:	1b b8       	out	0x0b, r1	; 11
		int distance = calc_cm(gv_counter);
 1f2:	80 91 1d 01 	lds	r24, 0x011D	; 0x80011d <gv_counter>
 1f6:	90 91 1e 01 	lds	r25, 0x011E	; 0x80011e <gv_counter+0x1>
 1fa:	0e 94 65 00 	call	0xca	; 0xca <calc_cm>
		if (distance >= afstand | distance <= 5){
 1fe:	21 e0       	ldi	r18, 0x01	; 1
 200:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__data_start>
 204:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__data_start+0x1>
 208:	84 17       	cp	r24, r20
 20a:	95 07       	cpc	r25, r21
 20c:	0c f4       	brge	.+2      	; 0x210 <afstand_meter+0x30>
 20e:	20 e0       	ldi	r18, 0x00	; 0
 210:	21 11       	cpse	r18, r1
 212:	0b c0       	rjmp	.+22     	; 0x22a <afstand_meter+0x4a>
 214:	21 e0       	ldi	r18, 0x01	; 1
 216:	06 97       	sbiw	r24, 0x06	; 6
 218:	0c f0       	brlt	.+2      	; 0x21c <afstand_meter+0x3c>
 21a:	20 e0       	ldi	r18, 0x00	; 0
 21c:	21 11       	cpse	r18, r1
 21e:	05 c0       	rjmp	.+10     	; 0x22a <afstand_meter+0x4a>
			return 0;
		
		}
		else {
			leds();
 220:	0e 94 df 00 	call	0x1be	; 0x1be <leds>
			return 1;
 224:	81 e0       	ldi	r24, 0x01	; 1
 226:	90 e0       	ldi	r25, 0x00	; 0
 228:	08 95       	ret
		PORTD |= _BV(4);
		_delay_us(12);
		PORTD = 0x00;
		int distance = calc_cm(gv_counter);
		if (distance >= afstand | distance <= 5){
			return 0;
 22a:	80 e0       	ldi	r24, 0x00	; 0
 22c:	90 e0       	ldi	r25, 0x00	; 0
		else {
			leds();
			return 1;
	
	}
}
 22e:	08 95       	ret

00000230 <serial_conn>:
	while(!(UCSR0A & (1<<RXC0)));
	return UDR0;
	
}

int serial_conn(void){
 230:	cf 93       	push	r28
 232:	df 93       	push	r29
 234:	cd b7       	in	r28, 0x3d	; 61
 236:	de b7       	in	r29, 0x3e	; 62
 238:	28 97       	sbiw	r28, 0x08	; 8
 23a:	0f b6       	in	r0, 0x3f	; 63
 23c:	f8 94       	cli
 23e:	de bf       	out	0x3e, r29	; 62
 240:	0f be       	out	0x3f, r0	; 63
 242:	cd bf       	out	0x3d, r28	; 61
	uart_init();
 244:	0e 94 a5 00 	call	0x14a	; 0x14a <uart_init>
	while (1) {
		afstand_meter();
 248:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <afstand_meter>
		USART_putstring(String);
 24c:	86 e0       	ldi	r24, 0x06	; 6
 24e:	91 e0       	ldi	r25, 0x01	; 1
 250:	0e 94 bb 00 	call	0x176	; 0x176 <USART_putstring>
		//convert int to string
		char buffer[8];
		int tmp = calc_cm(gv_counter);
 254:	80 91 1d 01 	lds	r24, 0x011D	; 0x80011d <gv_counter>
 258:	90 91 1e 01 	lds	r25, 0x011E	; 0x80011e <gv_counter+0x1>
 25c:	0e 94 65 00 	call	0xca	; 0xca <calc_cm>
		itoa(tmp, buffer, 10);
 260:	4a e0       	ldi	r20, 0x0A	; 10
 262:	50 e0       	ldi	r21, 0x00	; 0
 264:	be 01       	movw	r22, r28
 266:	6f 5f       	subi	r22, 0xFF	; 255
 268:	7f 4f       	sbci	r23, 0xFF	; 255
 26a:	0e 94 80 02 	call	0x500	; 0x500 <itoa>
		USART_putstring(buffer);
 26e:	ce 01       	movw	r24, r28
 270:	01 96       	adiw	r24, 0x01	; 1
 272:	0e 94 bb 00 	call	0x176	; 0x176 <USART_putstring>
		USART_putstring(String2);
 276:	82 e0       	ldi	r24, 0x02	; 2
 278:	91 e0       	ldi	r25, 0x01	; 1
 27a:	0e 94 bb 00 	call	0x176	; 0x176 <USART_putstring>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 27e:	2f ef       	ldi	r18, 0xFF	; 255
 280:	8b e7       	ldi	r24, 0x7B	; 123
 282:	92 e9       	ldi	r25, 0x92	; 146
 284:	21 50       	subi	r18, 0x01	; 1
 286:	80 40       	sbci	r24, 0x00	; 0
 288:	90 40       	sbci	r25, 0x00	; 0
 28a:	e1 f7       	brne	.-8      	; 0x284 <serial_conn+0x54>
 28c:	00 c0       	rjmp	.+0      	; 0x28e <serial_conn+0x5e>
 28e:	00 00       	nop
 290:	db cf       	rjmp	.-74     	; 0x248 <serial_conn+0x18>

00000292 <main>:
}

int main(void)
{
	while(1){
	init_ports();
 292:	0e 94 53 00 	call	0xa6	; 0xa6 <init_ports>
	init_timer();
 296:	0e 94 5a 00 	call	0xb4	; 0xb4 <init_timer>
	init_ext_int();
 29a:	0e 94 5f 00 	call	0xbe	; 0xbe <init_ext_int>
	serial_conn();
 29e:	0e 94 18 01 	call	0x230	; 0x230 <serial_conn>

000002a2 <__divsf3>:
 2a2:	0e 94 65 01 	call	0x2ca	; 0x2ca <__divsf3x>
 2a6:	0c 94 46 02 	jmp	0x48c	; 0x48c <__fp_round>
 2aa:	0e 94 3f 02 	call	0x47e	; 0x47e <__fp_pscB>
 2ae:	58 f0       	brcs	.+22     	; 0x2c6 <__divsf3+0x24>
 2b0:	0e 94 38 02 	call	0x470	; 0x470 <__fp_pscA>
 2b4:	40 f0       	brcs	.+16     	; 0x2c6 <__divsf3+0x24>
 2b6:	29 f4       	brne	.+10     	; 0x2c2 <__divsf3+0x20>
 2b8:	5f 3f       	cpi	r21, 0xFF	; 255
 2ba:	29 f0       	breq	.+10     	; 0x2c6 <__divsf3+0x24>
 2bc:	0c 94 2f 02 	jmp	0x45e	; 0x45e <__fp_inf>
 2c0:	51 11       	cpse	r21, r1
 2c2:	0c 94 7a 02 	jmp	0x4f4	; 0x4f4 <__fp_szero>
 2c6:	0c 94 35 02 	jmp	0x46a	; 0x46a <__fp_nan>

000002ca <__divsf3x>:
 2ca:	0e 94 57 02 	call	0x4ae	; 0x4ae <__fp_split3>
 2ce:	68 f3       	brcs	.-38     	; 0x2aa <__divsf3+0x8>

000002d0 <__divsf3_pse>:
 2d0:	99 23       	and	r25, r25
 2d2:	b1 f3       	breq	.-20     	; 0x2c0 <__divsf3+0x1e>
 2d4:	55 23       	and	r21, r21
 2d6:	91 f3       	breq	.-28     	; 0x2bc <__divsf3+0x1a>
 2d8:	95 1b       	sub	r25, r21
 2da:	55 0b       	sbc	r21, r21
 2dc:	bb 27       	eor	r27, r27
 2de:	aa 27       	eor	r26, r26
 2e0:	62 17       	cp	r22, r18
 2e2:	73 07       	cpc	r23, r19
 2e4:	84 07       	cpc	r24, r20
 2e6:	38 f0       	brcs	.+14     	; 0x2f6 <__divsf3_pse+0x26>
 2e8:	9f 5f       	subi	r25, 0xFF	; 255
 2ea:	5f 4f       	sbci	r21, 0xFF	; 255
 2ec:	22 0f       	add	r18, r18
 2ee:	33 1f       	adc	r19, r19
 2f0:	44 1f       	adc	r20, r20
 2f2:	aa 1f       	adc	r26, r26
 2f4:	a9 f3       	breq	.-22     	; 0x2e0 <__divsf3_pse+0x10>
 2f6:	35 d0       	rcall	.+106    	; 0x362 <__divsf3_pse+0x92>
 2f8:	0e 2e       	mov	r0, r30
 2fa:	3a f0       	brmi	.+14     	; 0x30a <__divsf3_pse+0x3a>
 2fc:	e0 e8       	ldi	r30, 0x80	; 128
 2fe:	32 d0       	rcall	.+100    	; 0x364 <__divsf3_pse+0x94>
 300:	91 50       	subi	r25, 0x01	; 1
 302:	50 40       	sbci	r21, 0x00	; 0
 304:	e6 95       	lsr	r30
 306:	00 1c       	adc	r0, r0
 308:	ca f7       	brpl	.-14     	; 0x2fc <__divsf3_pse+0x2c>
 30a:	2b d0       	rcall	.+86     	; 0x362 <__divsf3_pse+0x92>
 30c:	fe 2f       	mov	r31, r30
 30e:	29 d0       	rcall	.+82     	; 0x362 <__divsf3_pse+0x92>
 310:	66 0f       	add	r22, r22
 312:	77 1f       	adc	r23, r23
 314:	88 1f       	adc	r24, r24
 316:	bb 1f       	adc	r27, r27
 318:	26 17       	cp	r18, r22
 31a:	37 07       	cpc	r19, r23
 31c:	48 07       	cpc	r20, r24
 31e:	ab 07       	cpc	r26, r27
 320:	b0 e8       	ldi	r27, 0x80	; 128
 322:	09 f0       	breq	.+2      	; 0x326 <__divsf3_pse+0x56>
 324:	bb 0b       	sbc	r27, r27
 326:	80 2d       	mov	r24, r0
 328:	bf 01       	movw	r22, r30
 32a:	ff 27       	eor	r31, r31
 32c:	93 58       	subi	r25, 0x83	; 131
 32e:	5f 4f       	sbci	r21, 0xFF	; 255
 330:	3a f0       	brmi	.+14     	; 0x340 <__divsf3_pse+0x70>
 332:	9e 3f       	cpi	r25, 0xFE	; 254
 334:	51 05       	cpc	r21, r1
 336:	78 f0       	brcs	.+30     	; 0x356 <__divsf3_pse+0x86>
 338:	0c 94 2f 02 	jmp	0x45e	; 0x45e <__fp_inf>
 33c:	0c 94 7a 02 	jmp	0x4f4	; 0x4f4 <__fp_szero>
 340:	5f 3f       	cpi	r21, 0xFF	; 255
 342:	e4 f3       	brlt	.-8      	; 0x33c <__divsf3_pse+0x6c>
 344:	98 3e       	cpi	r25, 0xE8	; 232
 346:	d4 f3       	brlt	.-12     	; 0x33c <__divsf3_pse+0x6c>
 348:	86 95       	lsr	r24
 34a:	77 95       	ror	r23
 34c:	67 95       	ror	r22
 34e:	b7 95       	ror	r27
 350:	f7 95       	ror	r31
 352:	9f 5f       	subi	r25, 0xFF	; 255
 354:	c9 f7       	brne	.-14     	; 0x348 <__divsf3_pse+0x78>
 356:	88 0f       	add	r24, r24
 358:	91 1d       	adc	r25, r1
 35a:	96 95       	lsr	r25
 35c:	87 95       	ror	r24
 35e:	97 f9       	bld	r25, 7
 360:	08 95       	ret
 362:	e1 e0       	ldi	r30, 0x01	; 1
 364:	66 0f       	add	r22, r22
 366:	77 1f       	adc	r23, r23
 368:	88 1f       	adc	r24, r24
 36a:	bb 1f       	adc	r27, r27
 36c:	62 17       	cp	r22, r18
 36e:	73 07       	cpc	r23, r19
 370:	84 07       	cpc	r24, r20
 372:	ba 07       	cpc	r27, r26
 374:	20 f0       	brcs	.+8      	; 0x37e <__divsf3_pse+0xae>
 376:	62 1b       	sub	r22, r18
 378:	73 0b       	sbc	r23, r19
 37a:	84 0b       	sbc	r24, r20
 37c:	ba 0b       	sbc	r27, r26
 37e:	ee 1f       	adc	r30, r30
 380:	88 f7       	brcc	.-30     	; 0x364 <__divsf3_pse+0x94>
 382:	e0 95       	com	r30
 384:	08 95       	ret

00000386 <__fixunssfsi>:
 386:	0e 94 5f 02 	call	0x4be	; 0x4be <__fp_splitA>
 38a:	88 f0       	brcs	.+34     	; 0x3ae <__fixunssfsi+0x28>
 38c:	9f 57       	subi	r25, 0x7F	; 127
 38e:	98 f0       	brcs	.+38     	; 0x3b6 <__fixunssfsi+0x30>
 390:	b9 2f       	mov	r27, r25
 392:	99 27       	eor	r25, r25
 394:	b7 51       	subi	r27, 0x17	; 23
 396:	b0 f0       	brcs	.+44     	; 0x3c4 <__fixunssfsi+0x3e>
 398:	e1 f0       	breq	.+56     	; 0x3d2 <__fixunssfsi+0x4c>
 39a:	66 0f       	add	r22, r22
 39c:	77 1f       	adc	r23, r23
 39e:	88 1f       	adc	r24, r24
 3a0:	99 1f       	adc	r25, r25
 3a2:	1a f0       	brmi	.+6      	; 0x3aa <__fixunssfsi+0x24>
 3a4:	ba 95       	dec	r27
 3a6:	c9 f7       	brne	.-14     	; 0x39a <__fixunssfsi+0x14>
 3a8:	14 c0       	rjmp	.+40     	; 0x3d2 <__fixunssfsi+0x4c>
 3aa:	b1 30       	cpi	r27, 0x01	; 1
 3ac:	91 f0       	breq	.+36     	; 0x3d2 <__fixunssfsi+0x4c>
 3ae:	0e 94 79 02 	call	0x4f2	; 0x4f2 <__fp_zero>
 3b2:	b1 e0       	ldi	r27, 0x01	; 1
 3b4:	08 95       	ret
 3b6:	0c 94 79 02 	jmp	0x4f2	; 0x4f2 <__fp_zero>
 3ba:	67 2f       	mov	r22, r23
 3bc:	78 2f       	mov	r23, r24
 3be:	88 27       	eor	r24, r24
 3c0:	b8 5f       	subi	r27, 0xF8	; 248
 3c2:	39 f0       	breq	.+14     	; 0x3d2 <__fixunssfsi+0x4c>
 3c4:	b9 3f       	cpi	r27, 0xF9	; 249
 3c6:	cc f3       	brlt	.-14     	; 0x3ba <__fixunssfsi+0x34>
 3c8:	86 95       	lsr	r24
 3ca:	77 95       	ror	r23
 3cc:	67 95       	ror	r22
 3ce:	b3 95       	inc	r27
 3d0:	d9 f7       	brne	.-10     	; 0x3c8 <__fixunssfsi+0x42>
 3d2:	3e f4       	brtc	.+14     	; 0x3e2 <__fixunssfsi+0x5c>
 3d4:	90 95       	com	r25
 3d6:	80 95       	com	r24
 3d8:	70 95       	com	r23
 3da:	61 95       	neg	r22
 3dc:	7f 4f       	sbci	r23, 0xFF	; 255
 3de:	8f 4f       	sbci	r24, 0xFF	; 255
 3e0:	9f 4f       	sbci	r25, 0xFF	; 255
 3e2:	08 95       	ret

000003e4 <__floatunsisf>:
 3e4:	e8 94       	clt
 3e6:	09 c0       	rjmp	.+18     	; 0x3fa <__floatsisf+0x12>

000003e8 <__floatsisf>:
 3e8:	97 fb       	bst	r25, 7
 3ea:	3e f4       	brtc	.+14     	; 0x3fa <__floatsisf+0x12>
 3ec:	90 95       	com	r25
 3ee:	80 95       	com	r24
 3f0:	70 95       	com	r23
 3f2:	61 95       	neg	r22
 3f4:	7f 4f       	sbci	r23, 0xFF	; 255
 3f6:	8f 4f       	sbci	r24, 0xFF	; 255
 3f8:	9f 4f       	sbci	r25, 0xFF	; 255
 3fa:	99 23       	and	r25, r25
 3fc:	a9 f0       	breq	.+42     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
 3fe:	f9 2f       	mov	r31, r25
 400:	96 e9       	ldi	r25, 0x96	; 150
 402:	bb 27       	eor	r27, r27
 404:	93 95       	inc	r25
 406:	f6 95       	lsr	r31
 408:	87 95       	ror	r24
 40a:	77 95       	ror	r23
 40c:	67 95       	ror	r22
 40e:	b7 95       	ror	r27
 410:	f1 11       	cpse	r31, r1
 412:	f8 cf       	rjmp	.-16     	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 414:	fa f4       	brpl	.+62     	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
 416:	bb 0f       	add	r27, r27
 418:	11 f4       	brne	.+4      	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 41a:	60 ff       	sbrs	r22, 0
 41c:	1b c0       	rjmp	.+54     	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
 41e:	6f 5f       	subi	r22, 0xFF	; 255
 420:	7f 4f       	sbci	r23, 0xFF	; 255
 422:	8f 4f       	sbci	r24, 0xFF	; 255
 424:	9f 4f       	sbci	r25, 0xFF	; 255
 426:	16 c0       	rjmp	.+44     	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
 428:	88 23       	and	r24, r24
 42a:	11 f0       	breq	.+4      	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 42c:	96 e9       	ldi	r25, 0x96	; 150
 42e:	11 c0       	rjmp	.+34     	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
 430:	77 23       	and	r23, r23
 432:	21 f0       	breq	.+8      	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
 434:	9e e8       	ldi	r25, 0x8E	; 142
 436:	87 2f       	mov	r24, r23
 438:	76 2f       	mov	r23, r22
 43a:	05 c0       	rjmp	.+10     	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 43c:	66 23       	and	r22, r22
 43e:	71 f0       	breq	.+28     	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
 440:	96 e8       	ldi	r25, 0x86	; 134
 442:	86 2f       	mov	r24, r22
 444:	70 e0       	ldi	r23, 0x00	; 0
 446:	60 e0       	ldi	r22, 0x00	; 0
 448:	2a f0       	brmi	.+10     	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
 44a:	9a 95       	dec	r25
 44c:	66 0f       	add	r22, r22
 44e:	77 1f       	adc	r23, r23
 450:	88 1f       	adc	r24, r24
 452:	da f7       	brpl	.-10     	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 454:	88 0f       	add	r24, r24
 456:	96 95       	lsr	r25
 458:	87 95       	ror	r24
 45a:	97 f9       	bld	r25, 7
 45c:	08 95       	ret

0000045e <__fp_inf>:
 45e:	97 f9       	bld	r25, 7
 460:	9f 67       	ori	r25, 0x7F	; 127
 462:	80 e8       	ldi	r24, 0x80	; 128
 464:	70 e0       	ldi	r23, 0x00	; 0
 466:	60 e0       	ldi	r22, 0x00	; 0
 468:	08 95       	ret

0000046a <__fp_nan>:
 46a:	9f ef       	ldi	r25, 0xFF	; 255
 46c:	80 ec       	ldi	r24, 0xC0	; 192
 46e:	08 95       	ret

00000470 <__fp_pscA>:
 470:	00 24       	eor	r0, r0
 472:	0a 94       	dec	r0
 474:	16 16       	cp	r1, r22
 476:	17 06       	cpc	r1, r23
 478:	18 06       	cpc	r1, r24
 47a:	09 06       	cpc	r0, r25
 47c:	08 95       	ret

0000047e <__fp_pscB>:
 47e:	00 24       	eor	r0, r0
 480:	0a 94       	dec	r0
 482:	12 16       	cp	r1, r18
 484:	13 06       	cpc	r1, r19
 486:	14 06       	cpc	r1, r20
 488:	05 06       	cpc	r0, r21
 48a:	08 95       	ret

0000048c <__fp_round>:
 48c:	09 2e       	mov	r0, r25
 48e:	03 94       	inc	r0
 490:	00 0c       	add	r0, r0
 492:	11 f4       	brne	.+4      	; 0x498 <__fp_round+0xc>
 494:	88 23       	and	r24, r24
 496:	52 f0       	brmi	.+20     	; 0x4ac <__fp_round+0x20>
 498:	bb 0f       	add	r27, r27
 49a:	40 f4       	brcc	.+16     	; 0x4ac <__fp_round+0x20>
 49c:	bf 2b       	or	r27, r31
 49e:	11 f4       	brne	.+4      	; 0x4a4 <__fp_round+0x18>
 4a0:	60 ff       	sbrs	r22, 0
 4a2:	04 c0       	rjmp	.+8      	; 0x4ac <__fp_round+0x20>
 4a4:	6f 5f       	subi	r22, 0xFF	; 255
 4a6:	7f 4f       	sbci	r23, 0xFF	; 255
 4a8:	8f 4f       	sbci	r24, 0xFF	; 255
 4aa:	9f 4f       	sbci	r25, 0xFF	; 255
 4ac:	08 95       	ret

000004ae <__fp_split3>:
 4ae:	57 fd       	sbrc	r21, 7
 4b0:	90 58       	subi	r25, 0x80	; 128
 4b2:	44 0f       	add	r20, r20
 4b4:	55 1f       	adc	r21, r21
 4b6:	59 f0       	breq	.+22     	; 0x4ce <__fp_splitA+0x10>
 4b8:	5f 3f       	cpi	r21, 0xFF	; 255
 4ba:	71 f0       	breq	.+28     	; 0x4d8 <__fp_splitA+0x1a>
 4bc:	47 95       	ror	r20

000004be <__fp_splitA>:
 4be:	88 0f       	add	r24, r24
 4c0:	97 fb       	bst	r25, 7
 4c2:	99 1f       	adc	r25, r25
 4c4:	61 f0       	breq	.+24     	; 0x4de <__fp_splitA+0x20>
 4c6:	9f 3f       	cpi	r25, 0xFF	; 255
 4c8:	79 f0       	breq	.+30     	; 0x4e8 <__fp_splitA+0x2a>
 4ca:	87 95       	ror	r24
 4cc:	08 95       	ret
 4ce:	12 16       	cp	r1, r18
 4d0:	13 06       	cpc	r1, r19
 4d2:	14 06       	cpc	r1, r20
 4d4:	55 1f       	adc	r21, r21
 4d6:	f2 cf       	rjmp	.-28     	; 0x4bc <__fp_split3+0xe>
 4d8:	46 95       	lsr	r20
 4da:	f1 df       	rcall	.-30     	; 0x4be <__fp_splitA>
 4dc:	08 c0       	rjmp	.+16     	; 0x4ee <__fp_splitA+0x30>
 4de:	16 16       	cp	r1, r22
 4e0:	17 06       	cpc	r1, r23
 4e2:	18 06       	cpc	r1, r24
 4e4:	99 1f       	adc	r25, r25
 4e6:	f1 cf       	rjmp	.-30     	; 0x4ca <__fp_splitA+0xc>
 4e8:	86 95       	lsr	r24
 4ea:	71 05       	cpc	r23, r1
 4ec:	61 05       	cpc	r22, r1
 4ee:	08 94       	sec
 4f0:	08 95       	ret

000004f2 <__fp_zero>:
 4f2:	e8 94       	clt

000004f4 <__fp_szero>:
 4f4:	bb 27       	eor	r27, r27
 4f6:	66 27       	eor	r22, r22
 4f8:	77 27       	eor	r23, r23
 4fa:	cb 01       	movw	r24, r22
 4fc:	97 f9       	bld	r25, 7
 4fe:	08 95       	ret

00000500 <itoa>:
 500:	45 32       	cpi	r20, 0x25	; 37
 502:	51 05       	cpc	r21, r1
 504:	20 f4       	brcc	.+8      	; 0x50e <itoa+0xe>
 506:	42 30       	cpi	r20, 0x02	; 2
 508:	10 f0       	brcs	.+4      	; 0x50e <itoa+0xe>
 50a:	0c 94 8b 02 	jmp	0x516	; 0x516 <__itoa_ncheck>
 50e:	fb 01       	movw	r30, r22
 510:	10 82       	st	Z, r1
 512:	cb 01       	movw	r24, r22
 514:	08 95       	ret

00000516 <__itoa_ncheck>:
 516:	bb 27       	eor	r27, r27
 518:	4a 30       	cpi	r20, 0x0A	; 10
 51a:	31 f4       	brne	.+12     	; 0x528 <__itoa_ncheck+0x12>
 51c:	99 23       	and	r25, r25
 51e:	22 f4       	brpl	.+8      	; 0x528 <__itoa_ncheck+0x12>
 520:	bd e2       	ldi	r27, 0x2D	; 45
 522:	90 95       	com	r25
 524:	81 95       	neg	r24
 526:	9f 4f       	sbci	r25, 0xFF	; 255
 528:	0c 94 97 02 	jmp	0x52e	; 0x52e <__utoa_common>

0000052c <__utoa_ncheck>:
 52c:	bb 27       	eor	r27, r27

0000052e <__utoa_common>:
 52e:	fb 01       	movw	r30, r22
 530:	55 27       	eor	r21, r21
 532:	aa 27       	eor	r26, r26
 534:	88 0f       	add	r24, r24
 536:	99 1f       	adc	r25, r25
 538:	aa 1f       	adc	r26, r26
 53a:	a4 17       	cp	r26, r20
 53c:	10 f0       	brcs	.+4      	; 0x542 <__utoa_common+0x14>
 53e:	a4 1b       	sub	r26, r20
 540:	83 95       	inc	r24
 542:	50 51       	subi	r21, 0x10	; 16
 544:	b9 f7       	brne	.-18     	; 0x534 <__utoa_common+0x6>
 546:	a0 5d       	subi	r26, 0xD0	; 208
 548:	aa 33       	cpi	r26, 0x3A	; 58
 54a:	08 f0       	brcs	.+2      	; 0x54e <__utoa_common+0x20>
 54c:	a9 5d       	subi	r26, 0xD9	; 217
 54e:	a1 93       	st	Z+, r26
 550:	00 97       	sbiw	r24, 0x00	; 0
 552:	79 f7       	brne	.-34     	; 0x532 <__utoa_common+0x4>
 554:	b1 11       	cpse	r27, r1
 556:	b1 93       	st	Z+, r27
 558:	11 92       	st	Z+, r1
 55a:	cb 01       	movw	r24, r22
 55c:	0c 94 b0 02 	jmp	0x560	; 0x560 <strrev>

00000560 <strrev>:
 560:	dc 01       	movw	r26, r24
 562:	fc 01       	movw	r30, r24
 564:	67 2f       	mov	r22, r23
 566:	71 91       	ld	r23, Z+
 568:	77 23       	and	r23, r23
 56a:	e1 f7       	brne	.-8      	; 0x564 <strrev+0x4>
 56c:	32 97       	sbiw	r30, 0x02	; 2
 56e:	04 c0       	rjmp	.+8      	; 0x578 <strrev+0x18>
 570:	7c 91       	ld	r23, X
 572:	6d 93       	st	X+, r22
 574:	70 83       	st	Z, r23
 576:	62 91       	ld	r22, -Z
 578:	ae 17       	cp	r26, r30
 57a:	bf 07       	cpc	r27, r31
 57c:	c8 f3       	brcs	.-14     	; 0x570 <strrev+0x10>
 57e:	08 95       	ret

00000580 <_exit>:
 580:	f8 94       	cli

00000582 <__stop_program>:
 582:	ff cf       	rjmp	.-2      	; 0x582 <__stop_program>
