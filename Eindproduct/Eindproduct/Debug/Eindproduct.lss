
Eindproduct.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000212  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000019e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000003  00800100  00800100  00000212  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000212  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000244  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000078  00000000  00000000  00000284  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000a23  00000000  00000000  000002fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007e7  00000000  00000000  00000d1f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000451  00000000  00000000  00001506  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000100  00000000  00000000  00001958  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000475  00000000  00000000  00001a58  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000197  00000000  00000000  00001ecd  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000068  00000000  00000000  00002064  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 8d 00 	jmp	0x11a	; 0x11a <__vector_2>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ee e9       	ldi	r30, 0x9E	; 158
  7c:	f1 e0       	ldi	r31, 0x01	; 1
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a0 30       	cpi	r26, 0x00	; 0
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a0 e0       	ldi	r26, 0x00	; 0
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a3 30       	cpi	r26, 0x03	; 3
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 cb 00 	call	0x196	; 0x196 <main>
  9e:	0c 94 cd 00 	jmp	0x19a	; 0x19a <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <init_ports>:
unsigned char USART_receive(void){
	
	while(!(UCSR0A & (1<<RXC0)));
	return UDR0;
	
}
  a6:	80 e1       	ldi	r24, 0x10	; 16
  a8:	8a b9       	out	0x0a, r24	; 10
  aa:	87 ef       	ldi	r24, 0xF7	; 247
  ac:	8a b9       	out	0x0a, r24	; 10
  ae:	08 95       	ret

000000b0 <init_timer>:
  b0:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
  b4:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
  b8:	08 95       	ret

000000ba <init_ext_int>:
  ba:	84 e0       	ldi	r24, 0x04	; 4
  bc:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__TEXT_REGION_LENGTH__+0x7e0069>
  c0:	82 e0       	ldi	r24, 0x02	; 2
  c2:	8d bb       	out	0x1d, r24	; 29
  c4:	08 95       	ret

000000c6 <afstand_meter>:
  c6:	0e 94 53 00 	call	0xa6	; 0xa6 <init_ports>
  ca:	0e 94 58 00 	call	0xb0	; 0xb0 <init_timer>
  ce:	0e 94 5d 00 	call	0xba	; 0xba <init_ext_int>
  d2:	78 94       	sei
  d4:	81 e0       	ldi	r24, 0x01	; 1
  d6:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_end>
  da:	5c 9a       	sbi	0x0b, 4	; 11
  dc:	20 e4       	ldi	r18, 0x40	; 64
  de:	2a 95       	dec	r18
  e0:	f1 f7       	brne	.-4      	; 0xde <afstand_meter+0x18>
  e2:	1b b8       	out	0x0b, r1	; 11
  e4:	3f ef       	ldi	r19, 0xFF	; 255
  e6:	96 e7       	ldi	r25, 0x76	; 118
  e8:	21 e0       	ldi	r18, 0x01	; 1
  ea:	31 50       	subi	r19, 0x01	; 1
  ec:	90 40       	sbci	r25, 0x00	; 0
  ee:	20 40       	sbci	r18, 0x00	; 0
  f0:	e1 f7       	brne	.-8      	; 0xea <afstand_meter+0x24>
  f2:	00 c0       	rjmp	.+0      	; 0xf4 <afstand_meter+0x2e>
  f4:	00 00       	nop
  f6:	20 91 01 01 	lds	r18, 0x0101	; 0x800101 <gv_counter>
  fa:	30 91 02 01 	lds	r19, 0x0102	; 0x800102 <gv_counter+0x1>
  fe:	20 91 01 01 	lds	r18, 0x0101	; 0x800101 <gv_counter>
 102:	30 91 02 01 	lds	r19, 0x0102	; 0x800102 <gv_counter+0x1>
 106:	3f ef       	ldi	r19, 0xFF	; 255
 108:	99 e6       	ldi	r25, 0x69	; 105
 10a:	28 e1       	ldi	r18, 0x18	; 24
 10c:	31 50       	subi	r19, 0x01	; 1
 10e:	90 40       	sbci	r25, 0x00	; 0
 110:	20 40       	sbci	r18, 0x00	; 0
 112:	e1 f7       	brne	.-8      	; 0x10c <afstand_meter+0x46>
 114:	00 c0       	rjmp	.+0      	; 0x116 <afstand_meter+0x50>
 116:	00 00       	nop
 118:	de cf       	rjmp	.-68     	; 0xd6 <afstand_meter+0x10>

0000011a <__vector_2>:
 11a:	1f 92       	push	r1
 11c:	0f 92       	push	r0
 11e:	0f b6       	in	r0, 0x3f	; 63
 120:	0f 92       	push	r0
 122:	11 24       	eor	r1, r1
 124:	8f 93       	push	r24
 126:	9f 93       	push	r25
 128:	ef 93       	push	r30
 12a:	ff 93       	push	r31
 12c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_end>
 130:	81 30       	cpi	r24, 0x01	; 1
 132:	61 f4       	brne	.+24     	; 0x14c <__vector_2+0x32>
 134:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 138:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 13c:	e1 e8       	ldi	r30, 0x81	; 129
 13e:	f0 e0       	ldi	r31, 0x00	; 0
 140:	80 81       	ld	r24, Z
 142:	81 60       	ori	r24, 0x01	; 1
 144:	80 83       	st	Z, r24
 146:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__data_end>
 14a:	0a c0       	rjmp	.+20     	; 0x160 <__vector_2+0x46>
 14c:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 150:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 154:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 158:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <gv_counter+0x1>
 15c:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <gv_counter>
 160:	ff 91       	pop	r31
 162:	ef 91       	pop	r30
 164:	9f 91       	pop	r25
 166:	8f 91       	pop	r24
 168:	0f 90       	pop	r0
 16a:	0f be       	out	0x3f, r0	; 63
 16c:	0f 90       	pop	r0
 16e:	1f 90       	pop	r1
 170:	18 95       	reti

00000172 <uart_init>:
 172:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 176:	83 e3       	ldi	r24, 0x33	; 51
 178:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
 17c:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
 180:	88 e0       	ldi	r24, 0x08	; 8
 182:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 186:	86 e0       	ldi	r24, 0x06	; 6
 188:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
 18c:	08 95       	ret

0000018e <serial_conn>:

int serial_conn(void){
	uart_init();
 18e:	0e 94 b9 00 	call	0x172	; 0x172 <uart_init>
	afstand_meter();
 192:	0e 94 63 00 	call	0xc6	; 0xc6 <afstand_meter>

00000196 <main>:


int main(void)
{
	while(1){
	serial_conn();
 196:	0e 94 c7 00 	call	0x18e	; 0x18e <serial_conn>

0000019a <_exit>:
 19a:	f8 94       	cli

0000019c <__stop_program>:
 19c:	ff cf       	rjmp	.-2      	; 0x19c <__stop_program>
