
Eindproduct.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001a  00800100  000005d0  00000664  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000005d0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000007  0080011a  0080011a  0000067e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000067e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000006b0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  000006f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000be1  00000000  00000000  00000778  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000086c  00000000  00000000  00001359  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004ff  00000000  00000000  00001bc5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000013c  00000000  00000000  000020c4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004bb  00000000  00000000  00002200  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000002eb  00000000  00000000  000026bb  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000078  00000000  00000000  000029a6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 9c 00 	jmp	0x138	; 0x138 <__vector_2>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e0 ed       	ldi	r30, 0xD0	; 208
  7c:	f5 e0       	ldi	r31, 0x05	; 5
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	aa 31       	cpi	r26, 0x1A	; 26
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	aa e1       	ldi	r26, 0x1A	; 26
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a1 32       	cpi	r26, 0x21	; 33
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 6d 01 	call	0x2da	; 0x2da <main>
  9e:	0c 94 e6 02 	jmp	0x5cc	; 0x5cc <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <init_ports>:
unsigned char USART_receive(void){
	
	while(!(UCSR0A & (1<<RXC0)));
	return UDR0;
	
}
  a6:	80 e1       	ldi	r24, 0x10	; 16
  a8:	8a b9       	out	0x0a, r24	; 10
  aa:	87 ef       	ldi	r24, 0xF7	; 247
  ac:	8a b9       	out	0x0a, r24	; 10
  ae:	8f ef       	ldi	r24, 0xFF	; 255
  b0:	84 b9       	out	0x04, r24	; 4
  b2:	08 95       	ret

000000b4 <init_timer>:
  b4:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
  b8:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
  bc:	08 95       	ret

000000be <init_ext_int>:
  be:	84 e0       	ldi	r24, 0x04	; 4
  c0:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__TEXT_REGION_LENGTH__+0x7e0069>
  c4:	82 e0       	ldi	r24, 0x02	; 2
  c6:	8d bb       	out	0x1d, r24	; 29
  c8:	08 95       	ret

000000ca <calc_cm>:
  ca:	60 91 1f 01 	lds	r22, 0x011F	; 0x80011f <gv_counter>
  ce:	70 91 20 01 	lds	r23, 0x0120	; 0x800120 <gv_counter+0x1>
  d2:	76 95       	lsr	r23
  d4:	67 95       	ror	r22
  d6:	80 e0       	ldi	r24, 0x00	; 0
  d8:	90 e0       	ldi	r25, 0x00	; 0
  da:	0e 94 18 02 	call	0x430	; 0x430 <__floatunsisf>
  de:	2d ec       	ldi	r18, 0xCD	; 205
  e0:	3c ec       	ldi	r19, 0xCC	; 204
  e2:	48 e6       	ldi	r20, 0x68	; 104
  e4:	52 e4       	ldi	r21, 0x42	; 66
  e6:	0e 94 77 01 	call	0x2ee	; 0x2ee <__divsf3>
  ea:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <__fixunssfsi>
  ee:	cb 01       	movw	r24, r22
  f0:	08 95       	ret

000000f2 <afstand_meter>:
  f2:	78 94       	sei
  f4:	81 e0       	ldi	r24, 0x01	; 1
  f6:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <gv_echo>
  fa:	5c 9a       	sbi	0x0b, 4	; 11
  fc:	80 e4       	ldi	r24, 0x40	; 64
  fe:	8a 95       	dec	r24
 100:	f1 f7       	brne	.-4      	; 0xfe <afstand_meter+0xc>
 102:	1b b8       	out	0x0b, r1	; 11
 104:	80 91 1f 01 	lds	r24, 0x011F	; 0x80011f <gv_counter>
 108:	90 91 20 01 	lds	r25, 0x0120	; 0x800120 <gv_counter+0x1>
 10c:	0e 94 65 00 	call	0xca	; 0xca <calc_cm>
 110:	9c 01       	movw	r18, r24
 112:	81 e0       	ldi	r24, 0x01	; 1
 114:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__data_start>
 118:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__data_start+0x1>
 11c:	24 17       	cp	r18, r20
 11e:	35 07       	cpc	r19, r21
 120:	0c f4       	brge	.+2      	; 0x124 <afstand_meter+0x32>
 122:	80 e0       	ldi	r24, 0x00	; 0
 124:	91 e0       	ldi	r25, 0x01	; 1
 126:	26 30       	cpi	r18, 0x06	; 6
 128:	31 05       	cpc	r19, r1
 12a:	0c f0       	brlt	.+2      	; 0x12e <afstand_meter+0x3c>
 12c:	90 e0       	ldi	r25, 0x00	; 0
 12e:	98 2b       	or	r25, r24
 130:	81 e0       	ldi	r24, 0x01	; 1
 132:	89 27       	eor	r24, r25
 134:	90 e0       	ldi	r25, 0x00	; 0
 136:	08 95       	ret

00000138 <__vector_2>:
 138:	1f 92       	push	r1
 13a:	0f 92       	push	r0
 13c:	0f b6       	in	r0, 0x3f	; 63
 13e:	0f 92       	push	r0
 140:	11 24       	eor	r1, r1
 142:	8f 93       	push	r24
 144:	9f 93       	push	r25
 146:	ef 93       	push	r30
 148:	ff 93       	push	r31
 14a:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <gv_echo>
 14e:	81 30       	cpi	r24, 0x01	; 1
 150:	61 f4       	brne	.+24     	; 0x16a <__vector_2+0x32>
 152:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 156:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 15a:	e1 e8       	ldi	r30, 0x81	; 129
 15c:	f0 e0       	ldi	r31, 0x00	; 0
 15e:	80 81       	ld	r24, Z
 160:	82 60       	ori	r24, 0x02	; 2
 162:	80 83       	st	Z, r24
 164:	10 92 1e 01 	sts	0x011E, r1	; 0x80011e <gv_echo>
 168:	0a c0       	rjmp	.+20     	; 0x17e <__vector_2+0x46>
 16a:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 16e:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 172:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 176:	90 93 20 01 	sts	0x0120, r25	; 0x800120 <gv_counter+0x1>
 17a:	80 93 1f 01 	sts	0x011F, r24	; 0x80011f <gv_counter>
 17e:	ff 91       	pop	r31
 180:	ef 91       	pop	r30
 182:	9f 91       	pop	r25
 184:	8f 91       	pop	r24
 186:	0f 90       	pop	r0
 188:	0f be       	out	0x3f, r0	; 63
 18a:	0f 90       	pop	r0
 18c:	1f 90       	pop	r1
 18e:	18 95       	reti

00000190 <uart_init>:
 190:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 194:	83 e3       	ldi	r24, 0x33	; 51
 196:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
 19a:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
 19e:	88 e0       	ldi	r24, 0x08	; 8
 1a0:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 1a4:	86 e0       	ldi	r24, 0x06	; 6
 1a6:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
 1aa:	08 95       	ret

000001ac <transmit>:
 1ac:	e0 ec       	ldi	r30, 0xC0	; 192
 1ae:	f0 e0       	ldi	r31, 0x00	; 0
 1b0:	90 81       	ld	r25, Z
 1b2:	95 ff       	sbrs	r25, 5
 1b4:	fd cf       	rjmp	.-6      	; 0x1b0 <transmit+0x4>
 1b6:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 1ba:	08 95       	ret

000001bc <USART_putstring>:
 1bc:	cf 93       	push	r28
 1be:	df 93       	push	r29
 1c0:	ec 01       	movw	r28, r24
 1c2:	88 81       	ld	r24, Y
 1c4:	88 23       	and	r24, r24
 1c6:	31 f0       	breq	.+12     	; 0x1d4 <USART_putstring+0x18>
 1c8:	21 96       	adiw	r28, 0x01	; 1
 1ca:	0e 94 d6 00 	call	0x1ac	; 0x1ac <transmit>
 1ce:	89 91       	ld	r24, Y+
 1d0:	81 11       	cpse	r24, r1
 1d2:	fb cf       	rjmp	.-10     	; 0x1ca <USART_putstring+0xe>
 1d4:	df 91       	pop	r29
 1d6:	cf 91       	pop	r28
 1d8:	08 95       	ret

000001da <serial_conn>:

int serial_conn(void){
 1da:	cf 93       	push	r28
 1dc:	df 93       	push	r29
 1de:	cd b7       	in	r28, 0x3d	; 61
 1e0:	de b7       	in	r29, 0x3e	; 62
 1e2:	28 97       	sbiw	r28, 0x08	; 8
 1e4:	0f b6       	in	r0, 0x3f	; 63
 1e6:	f8 94       	cli
 1e8:	de bf       	out	0x3e, r29	; 62
 1ea:	0f be       	out	0x3f, r0	; 63
 1ec:	cd bf       	out	0x3d, r28	; 61
	uart_init();
 1ee:	0e 94 c8 00 	call	0x190	; 0x190 <uart_init>
	while (1) {
		afstand_meter();
 1f2:	0e 94 79 00 	call	0xf2	; 0xf2 <afstand_meter>
		USART_putstring(String);
 1f6:	86 e0       	ldi	r24, 0x06	; 6
 1f8:	91 e0       	ldi	r25, 0x01	; 1
 1fa:	0e 94 de 00 	call	0x1bc	; 0x1bc <USART_putstring>
		//convert int to string
		char buffer[8];
		int tmp = calc_cm(gv_counter);
 1fe:	80 91 1f 01 	lds	r24, 0x011F	; 0x80011f <gv_counter>
 202:	90 91 20 01 	lds	r25, 0x0120	; 0x800120 <gv_counter+0x1>
 206:	0e 94 65 00 	call	0xca	; 0xca <calc_cm>
		itoa(tmp, buffer, 10);
 20a:	4a e0       	ldi	r20, 0x0A	; 10
 20c:	50 e0       	ldi	r21, 0x00	; 0
 20e:	be 01       	movw	r22, r28
 210:	6f 5f       	subi	r22, 0xFF	; 255
 212:	7f 4f       	sbci	r23, 0xFF	; 255
 214:	0e 94 a6 02 	call	0x54c	; 0x54c <itoa>
		USART_putstring(buffer);
 218:	ce 01       	movw	r24, r28
 21a:	01 96       	adiw	r24, 0x01	; 1
 21c:	0e 94 de 00 	call	0x1bc	; 0x1bc <USART_putstring>
		USART_putstring(String2);
 220:	82 e0       	ldi	r24, 0x02	; 2
 222:	91 e0       	ldi	r25, 0x01	; 1
 224:	0e 94 de 00 	call	0x1bc	; 0x1bc <USART_putstring>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 228:	2f ef       	ldi	r18, 0xFF	; 255
 22a:	8b e7       	ldi	r24, 0x7B	; 123
 22c:	92 e9       	ldi	r25, 0x92	; 146
 22e:	21 50       	subi	r18, 0x01	; 1
 230:	80 40       	sbci	r24, 0x00	; 0
 232:	90 40       	sbci	r25, 0x00	; 0
 234:	e1 f7       	brne	.-8      	; 0x22e <serial_conn+0x54>
 236:	00 c0       	rjmp	.+0      	; 0x238 <serial_conn+0x5e>
 238:	00 00       	nop
 23a:	db cf       	rjmp	.-74     	; 0x1f2 <serial_conn+0x18>

0000023c <knipper>:
	return 0;
}


// Start code voor lampjes
void knipper(int nummer){
 23c:	cf 93       	push	r28
 23e:	df 93       	push	r29
 240:	ec 01       	movw	r28, r24
	while(afstand_meter() != nummer){
 242:	14 c0       	rjmp	.+40     	; 0x26c <knipper+0x30>
		PORTB |= _BV(1);
 244:	29 9a       	sbi	0x05, 1	; 5
 246:	2f ef       	ldi	r18, 0xFF	; 255
 248:	83 ec       	ldi	r24, 0xC3	; 195
 24a:	99 e0       	ldi	r25, 0x09	; 9
 24c:	21 50       	subi	r18, 0x01	; 1
 24e:	80 40       	sbci	r24, 0x00	; 0
 250:	90 40       	sbci	r25, 0x00	; 0
 252:	e1 f7       	brne	.-8      	; 0x24c <knipper+0x10>
 254:	00 c0       	rjmp	.+0      	; 0x256 <knipper+0x1a>
 256:	00 00       	nop
		_delay_ms(200);
		PORTB &= ~(1 << 1); // set output low
 258:	29 98       	cbi	0x05, 1	; 5
 25a:	2f ef       	ldi	r18, 0xFF	; 255
 25c:	83 ec       	ldi	r24, 0xC3	; 195
 25e:	99 e0       	ldi	r25, 0x09	; 9
 260:	21 50       	subi	r18, 0x01	; 1
 262:	80 40       	sbci	r24, 0x00	; 0
 264:	90 40       	sbci	r25, 0x00	; 0
 266:	e1 f7       	brne	.-8      	; 0x260 <knipper+0x24>
 268:	00 c0       	rjmp	.+0      	; 0x26a <knipper+0x2e>
 26a:	00 00       	nop
}


// Start code voor lampjes
void knipper(int nummer){
	while(afstand_meter() != nummer){
 26c:	0e 94 79 00 	call	0xf2	; 0xf2 <afstand_meter>
 270:	8c 17       	cp	r24, r28
 272:	9d 07       	cpc	r25, r29
 274:	39 f7       	brne	.-50     	; 0x244 <knipper+0x8>
		PORTB |= _BV(1);
		_delay_ms(200);
		PORTB &= ~(1 << 1); // set output low
		_delay_ms(200);
	}
	}
 276:	df 91       	pop	r29
 278:	cf 91       	pop	r28
 27a:	08 95       	ret

0000027c <leds>:

void leds(){
 if (i == 0){
 27c:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <__data_end>
 280:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <__data_end+0x1>
 284:	89 2b       	or	r24, r25
 286:	81 f4       	brne	.+32     	; 0x2a8 <leds+0x2c>
	 PORTB |= _BV(2);
 288:	2a 9a       	sbi	0x05, 2	; 5
	 PORTB &= ~(1 << 0);
 28a:	28 98       	cbi	0x05, 0	; 5
	 if (schermstatus == 1){
 28c:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <schermstatus>
 290:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <schermstatus+0x1>
 294:	01 97       	sbiw	r24, 0x01	; 1
 296:	41 f4       	brne	.+16     	; 0x2a8 <leds+0x2c>
		 knipper(1);
 298:	81 e0       	ldi	r24, 0x01	; 1
 29a:	90 e0       	ldi	r25, 0x00	; 0
 29c:	0e 94 1e 01 	call	0x23c	; 0x23c <knipper>
		 schermstatus = 0;
 2a0:	10 92 1d 01 	sts	0x011D, r1	; 0x80011d <schermstatus+0x1>
 2a4:	10 92 1c 01 	sts	0x011C, r1	; 0x80011c <schermstatus>
	 }
 }
 if(i == 1){
 2a8:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <__data_end>
 2ac:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <__data_end+0x1>
 2b0:	01 97       	sbiw	r24, 0x01	; 1
 2b2:	91 f4       	brne	.+36     	; 0x2d8 <leds+0x5c>
	 PORTB &= ~(1 << 2);
 2b4:	2a 98       	cbi	0x05, 2	; 5
	 PORTB |= _BV(0);
 2b6:	28 9a       	sbi	0x05, 0	; 5
	 if (schermstatus == 0){
 2b8:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <schermstatus>
 2bc:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <schermstatus+0x1>
 2c0:	89 2b       	or	r24, r25
 2c2:	51 f4       	brne	.+20     	; 0x2d8 <leds+0x5c>
		 knipper(0);
 2c4:	80 e0       	ldi	r24, 0x00	; 0
 2c6:	90 e0       	ldi	r25, 0x00	; 0
 2c8:	0e 94 1e 01 	call	0x23c	; 0x23c <knipper>
		 schermstatus = 1;
 2cc:	81 e0       	ldi	r24, 0x01	; 1
 2ce:	90 e0       	ldi	r25, 0x00	; 0
 2d0:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <schermstatus+0x1>
 2d4:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <schermstatus>
 2d8:	08 95       	ret

000002da <main>:
}

int main(void)
{
	while(1){
	init_ports();
 2da:	0e 94 53 00 	call	0xa6	; 0xa6 <init_ports>
	init_timer();
 2de:	0e 94 5a 00 	call	0xb4	; 0xb4 <init_timer>
	init_ext_int();
 2e2:	0e 94 5f 00 	call	0xbe	; 0xbe <init_ext_int>
	leds();
 2e6:	0e 94 3e 01 	call	0x27c	; 0x27c <leds>
	serial_conn();
 2ea:	0e 94 ed 00 	call	0x1da	; 0x1da <serial_conn>

000002ee <__divsf3>:
 2ee:	0e 94 8b 01 	call	0x316	; 0x316 <__divsf3x>
 2f2:	0c 94 6c 02 	jmp	0x4d8	; 0x4d8 <__fp_round>
 2f6:	0e 94 65 02 	call	0x4ca	; 0x4ca <__fp_pscB>
 2fa:	58 f0       	brcs	.+22     	; 0x312 <__divsf3+0x24>
 2fc:	0e 94 5e 02 	call	0x4bc	; 0x4bc <__fp_pscA>
 300:	40 f0       	brcs	.+16     	; 0x312 <__divsf3+0x24>
 302:	29 f4       	brne	.+10     	; 0x30e <__divsf3+0x20>
 304:	5f 3f       	cpi	r21, 0xFF	; 255
 306:	29 f0       	breq	.+10     	; 0x312 <__divsf3+0x24>
 308:	0c 94 55 02 	jmp	0x4aa	; 0x4aa <__fp_inf>
 30c:	51 11       	cpse	r21, r1
 30e:	0c 94 a0 02 	jmp	0x540	; 0x540 <__fp_szero>
 312:	0c 94 5b 02 	jmp	0x4b6	; 0x4b6 <__fp_nan>

00000316 <__divsf3x>:
 316:	0e 94 7d 02 	call	0x4fa	; 0x4fa <__fp_split3>
 31a:	68 f3       	brcs	.-38     	; 0x2f6 <__divsf3+0x8>

0000031c <__divsf3_pse>:
 31c:	99 23       	and	r25, r25
 31e:	b1 f3       	breq	.-20     	; 0x30c <__divsf3+0x1e>
 320:	55 23       	and	r21, r21
 322:	91 f3       	breq	.-28     	; 0x308 <__divsf3+0x1a>
 324:	95 1b       	sub	r25, r21
 326:	55 0b       	sbc	r21, r21
 328:	bb 27       	eor	r27, r27
 32a:	aa 27       	eor	r26, r26
 32c:	62 17       	cp	r22, r18
 32e:	73 07       	cpc	r23, r19
 330:	84 07       	cpc	r24, r20
 332:	38 f0       	brcs	.+14     	; 0x342 <__divsf3_pse+0x26>
 334:	9f 5f       	subi	r25, 0xFF	; 255
 336:	5f 4f       	sbci	r21, 0xFF	; 255
 338:	22 0f       	add	r18, r18
 33a:	33 1f       	adc	r19, r19
 33c:	44 1f       	adc	r20, r20
 33e:	aa 1f       	adc	r26, r26
 340:	a9 f3       	breq	.-22     	; 0x32c <__divsf3_pse+0x10>
 342:	35 d0       	rcall	.+106    	; 0x3ae <__divsf3_pse+0x92>
 344:	0e 2e       	mov	r0, r30
 346:	3a f0       	brmi	.+14     	; 0x356 <__divsf3_pse+0x3a>
 348:	e0 e8       	ldi	r30, 0x80	; 128
 34a:	32 d0       	rcall	.+100    	; 0x3b0 <__divsf3_pse+0x94>
 34c:	91 50       	subi	r25, 0x01	; 1
 34e:	50 40       	sbci	r21, 0x00	; 0
 350:	e6 95       	lsr	r30
 352:	00 1c       	adc	r0, r0
 354:	ca f7       	brpl	.-14     	; 0x348 <__divsf3_pse+0x2c>
 356:	2b d0       	rcall	.+86     	; 0x3ae <__divsf3_pse+0x92>
 358:	fe 2f       	mov	r31, r30
 35a:	29 d0       	rcall	.+82     	; 0x3ae <__divsf3_pse+0x92>
 35c:	66 0f       	add	r22, r22
 35e:	77 1f       	adc	r23, r23
 360:	88 1f       	adc	r24, r24
 362:	bb 1f       	adc	r27, r27
 364:	26 17       	cp	r18, r22
 366:	37 07       	cpc	r19, r23
 368:	48 07       	cpc	r20, r24
 36a:	ab 07       	cpc	r26, r27
 36c:	b0 e8       	ldi	r27, 0x80	; 128
 36e:	09 f0       	breq	.+2      	; 0x372 <__divsf3_pse+0x56>
 370:	bb 0b       	sbc	r27, r27
 372:	80 2d       	mov	r24, r0
 374:	bf 01       	movw	r22, r30
 376:	ff 27       	eor	r31, r31
 378:	93 58       	subi	r25, 0x83	; 131
 37a:	5f 4f       	sbci	r21, 0xFF	; 255
 37c:	3a f0       	brmi	.+14     	; 0x38c <__divsf3_pse+0x70>
 37e:	9e 3f       	cpi	r25, 0xFE	; 254
 380:	51 05       	cpc	r21, r1
 382:	78 f0       	brcs	.+30     	; 0x3a2 <__divsf3_pse+0x86>
 384:	0c 94 55 02 	jmp	0x4aa	; 0x4aa <__fp_inf>
 388:	0c 94 a0 02 	jmp	0x540	; 0x540 <__fp_szero>
 38c:	5f 3f       	cpi	r21, 0xFF	; 255
 38e:	e4 f3       	brlt	.-8      	; 0x388 <__divsf3_pse+0x6c>
 390:	98 3e       	cpi	r25, 0xE8	; 232
 392:	d4 f3       	brlt	.-12     	; 0x388 <__divsf3_pse+0x6c>
 394:	86 95       	lsr	r24
 396:	77 95       	ror	r23
 398:	67 95       	ror	r22
 39a:	b7 95       	ror	r27
 39c:	f7 95       	ror	r31
 39e:	9f 5f       	subi	r25, 0xFF	; 255
 3a0:	c9 f7       	brne	.-14     	; 0x394 <__divsf3_pse+0x78>
 3a2:	88 0f       	add	r24, r24
 3a4:	91 1d       	adc	r25, r1
 3a6:	96 95       	lsr	r25
 3a8:	87 95       	ror	r24
 3aa:	97 f9       	bld	r25, 7
 3ac:	08 95       	ret
 3ae:	e1 e0       	ldi	r30, 0x01	; 1
 3b0:	66 0f       	add	r22, r22
 3b2:	77 1f       	adc	r23, r23
 3b4:	88 1f       	adc	r24, r24
 3b6:	bb 1f       	adc	r27, r27
 3b8:	62 17       	cp	r22, r18
 3ba:	73 07       	cpc	r23, r19
 3bc:	84 07       	cpc	r24, r20
 3be:	ba 07       	cpc	r27, r26
 3c0:	20 f0       	brcs	.+8      	; 0x3ca <__divsf3_pse+0xae>
 3c2:	62 1b       	sub	r22, r18
 3c4:	73 0b       	sbc	r23, r19
 3c6:	84 0b       	sbc	r24, r20
 3c8:	ba 0b       	sbc	r27, r26
 3ca:	ee 1f       	adc	r30, r30
 3cc:	88 f7       	brcc	.-30     	; 0x3b0 <__divsf3_pse+0x94>
 3ce:	e0 95       	com	r30
 3d0:	08 95       	ret

000003d2 <__fixunssfsi>:
 3d2:	0e 94 85 02 	call	0x50a	; 0x50a <__fp_splitA>
 3d6:	88 f0       	brcs	.+34     	; 0x3fa <__fixunssfsi+0x28>
 3d8:	9f 57       	subi	r25, 0x7F	; 127
 3da:	98 f0       	brcs	.+38     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3dc:	b9 2f       	mov	r27, r25
 3de:	99 27       	eor	r25, r25
 3e0:	b7 51       	subi	r27, 0x17	; 23
 3e2:	b0 f0       	brcs	.+44     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 3e4:	e1 f0       	breq	.+56     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 3e6:	66 0f       	add	r22, r22
 3e8:	77 1f       	adc	r23, r23
 3ea:	88 1f       	adc	r24, r24
 3ec:	99 1f       	adc	r25, r25
 3ee:	1a f0       	brmi	.+6      	; 0x3f6 <__fixunssfsi+0x24>
 3f0:	ba 95       	dec	r27
 3f2:	c9 f7       	brne	.-14     	; 0x3e6 <__fixunssfsi+0x14>
 3f4:	14 c0       	rjmp	.+40     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 3f6:	b1 30       	cpi	r27, 0x01	; 1
 3f8:	91 f0       	breq	.+36     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 3fa:	0e 94 9f 02 	call	0x53e	; 0x53e <__fp_zero>
 3fe:	b1 e0       	ldi	r27, 0x01	; 1
 400:	08 95       	ret
 402:	0c 94 9f 02 	jmp	0x53e	; 0x53e <__fp_zero>
 406:	67 2f       	mov	r22, r23
 408:	78 2f       	mov	r23, r24
 40a:	88 27       	eor	r24, r24
 40c:	b8 5f       	subi	r27, 0xF8	; 248
 40e:	39 f0       	breq	.+14     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 410:	b9 3f       	cpi	r27, 0xF9	; 249
 412:	cc f3       	brlt	.-14     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 414:	86 95       	lsr	r24
 416:	77 95       	ror	r23
 418:	67 95       	ror	r22
 41a:	b3 95       	inc	r27
 41c:	d9 f7       	brne	.-10     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 41e:	3e f4       	brtc	.+14     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 420:	90 95       	com	r25
 422:	80 95       	com	r24
 424:	70 95       	com	r23
 426:	61 95       	neg	r22
 428:	7f 4f       	sbci	r23, 0xFF	; 255
 42a:	8f 4f       	sbci	r24, 0xFF	; 255
 42c:	9f 4f       	sbci	r25, 0xFF	; 255
 42e:	08 95       	ret

00000430 <__floatunsisf>:
 430:	e8 94       	clt
 432:	09 c0       	rjmp	.+18     	; 0x446 <__floatsisf+0x12>

00000434 <__floatsisf>:
 434:	97 fb       	bst	r25, 7
 436:	3e f4       	brtc	.+14     	; 0x446 <__floatsisf+0x12>
 438:	90 95       	com	r25
 43a:	80 95       	com	r24
 43c:	70 95       	com	r23
 43e:	61 95       	neg	r22
 440:	7f 4f       	sbci	r23, 0xFF	; 255
 442:	8f 4f       	sbci	r24, 0xFF	; 255
 444:	9f 4f       	sbci	r25, 0xFF	; 255
 446:	99 23       	and	r25, r25
 448:	a9 f0       	breq	.+42     	; 0x474 <__floatsisf+0x40>
 44a:	f9 2f       	mov	r31, r25
 44c:	96 e9       	ldi	r25, 0x96	; 150
 44e:	bb 27       	eor	r27, r27
 450:	93 95       	inc	r25
 452:	f6 95       	lsr	r31
 454:	87 95       	ror	r24
 456:	77 95       	ror	r23
 458:	67 95       	ror	r22
 45a:	b7 95       	ror	r27
 45c:	f1 11       	cpse	r31, r1
 45e:	f8 cf       	rjmp	.-16     	; 0x450 <__floatsisf+0x1c>
 460:	fa f4       	brpl	.+62     	; 0x4a0 <__floatsisf+0x6c>
 462:	bb 0f       	add	r27, r27
 464:	11 f4       	brne	.+4      	; 0x46a <__floatsisf+0x36>
 466:	60 ff       	sbrs	r22, 0
 468:	1b c0       	rjmp	.+54     	; 0x4a0 <__floatsisf+0x6c>
 46a:	6f 5f       	subi	r22, 0xFF	; 255
 46c:	7f 4f       	sbci	r23, 0xFF	; 255
 46e:	8f 4f       	sbci	r24, 0xFF	; 255
 470:	9f 4f       	sbci	r25, 0xFF	; 255
 472:	16 c0       	rjmp	.+44     	; 0x4a0 <__floatsisf+0x6c>
 474:	88 23       	and	r24, r24
 476:	11 f0       	breq	.+4      	; 0x47c <__floatsisf+0x48>
 478:	96 e9       	ldi	r25, 0x96	; 150
 47a:	11 c0       	rjmp	.+34     	; 0x49e <__floatsisf+0x6a>
 47c:	77 23       	and	r23, r23
 47e:	21 f0       	breq	.+8      	; 0x488 <__floatsisf+0x54>
 480:	9e e8       	ldi	r25, 0x8E	; 142
 482:	87 2f       	mov	r24, r23
 484:	76 2f       	mov	r23, r22
 486:	05 c0       	rjmp	.+10     	; 0x492 <__floatsisf+0x5e>
 488:	66 23       	and	r22, r22
 48a:	71 f0       	breq	.+28     	; 0x4a8 <__floatsisf+0x74>
 48c:	96 e8       	ldi	r25, 0x86	; 134
 48e:	86 2f       	mov	r24, r22
 490:	70 e0       	ldi	r23, 0x00	; 0
 492:	60 e0       	ldi	r22, 0x00	; 0
 494:	2a f0       	brmi	.+10     	; 0x4a0 <__floatsisf+0x6c>
 496:	9a 95       	dec	r25
 498:	66 0f       	add	r22, r22
 49a:	77 1f       	adc	r23, r23
 49c:	88 1f       	adc	r24, r24
 49e:	da f7       	brpl	.-10     	; 0x496 <__floatsisf+0x62>
 4a0:	88 0f       	add	r24, r24
 4a2:	96 95       	lsr	r25
 4a4:	87 95       	ror	r24
 4a6:	97 f9       	bld	r25, 7
 4a8:	08 95       	ret

000004aa <__fp_inf>:
 4aa:	97 f9       	bld	r25, 7
 4ac:	9f 67       	ori	r25, 0x7F	; 127
 4ae:	80 e8       	ldi	r24, 0x80	; 128
 4b0:	70 e0       	ldi	r23, 0x00	; 0
 4b2:	60 e0       	ldi	r22, 0x00	; 0
 4b4:	08 95       	ret

000004b6 <__fp_nan>:
 4b6:	9f ef       	ldi	r25, 0xFF	; 255
 4b8:	80 ec       	ldi	r24, 0xC0	; 192
 4ba:	08 95       	ret

000004bc <__fp_pscA>:
 4bc:	00 24       	eor	r0, r0
 4be:	0a 94       	dec	r0
 4c0:	16 16       	cp	r1, r22
 4c2:	17 06       	cpc	r1, r23
 4c4:	18 06       	cpc	r1, r24
 4c6:	09 06       	cpc	r0, r25
 4c8:	08 95       	ret

000004ca <__fp_pscB>:
 4ca:	00 24       	eor	r0, r0
 4cc:	0a 94       	dec	r0
 4ce:	12 16       	cp	r1, r18
 4d0:	13 06       	cpc	r1, r19
 4d2:	14 06       	cpc	r1, r20
 4d4:	05 06       	cpc	r0, r21
 4d6:	08 95       	ret

000004d8 <__fp_round>:
 4d8:	09 2e       	mov	r0, r25
 4da:	03 94       	inc	r0
 4dc:	00 0c       	add	r0, r0
 4de:	11 f4       	brne	.+4      	; 0x4e4 <__fp_round+0xc>
 4e0:	88 23       	and	r24, r24
 4e2:	52 f0       	brmi	.+20     	; 0x4f8 <__fp_round+0x20>
 4e4:	bb 0f       	add	r27, r27
 4e6:	40 f4       	brcc	.+16     	; 0x4f8 <__fp_round+0x20>
 4e8:	bf 2b       	or	r27, r31
 4ea:	11 f4       	brne	.+4      	; 0x4f0 <__fp_round+0x18>
 4ec:	60 ff       	sbrs	r22, 0
 4ee:	04 c0       	rjmp	.+8      	; 0x4f8 <__fp_round+0x20>
 4f0:	6f 5f       	subi	r22, 0xFF	; 255
 4f2:	7f 4f       	sbci	r23, 0xFF	; 255
 4f4:	8f 4f       	sbci	r24, 0xFF	; 255
 4f6:	9f 4f       	sbci	r25, 0xFF	; 255
 4f8:	08 95       	ret

000004fa <__fp_split3>:
 4fa:	57 fd       	sbrc	r21, 7
 4fc:	90 58       	subi	r25, 0x80	; 128
 4fe:	44 0f       	add	r20, r20
 500:	55 1f       	adc	r21, r21
 502:	59 f0       	breq	.+22     	; 0x51a <__fp_splitA+0x10>
 504:	5f 3f       	cpi	r21, 0xFF	; 255
 506:	71 f0       	breq	.+28     	; 0x524 <__fp_splitA+0x1a>
 508:	47 95       	ror	r20

0000050a <__fp_splitA>:
 50a:	88 0f       	add	r24, r24
 50c:	97 fb       	bst	r25, 7
 50e:	99 1f       	adc	r25, r25
 510:	61 f0       	breq	.+24     	; 0x52a <__fp_splitA+0x20>
 512:	9f 3f       	cpi	r25, 0xFF	; 255
 514:	79 f0       	breq	.+30     	; 0x534 <__fp_splitA+0x2a>
 516:	87 95       	ror	r24
 518:	08 95       	ret
 51a:	12 16       	cp	r1, r18
 51c:	13 06       	cpc	r1, r19
 51e:	14 06       	cpc	r1, r20
 520:	55 1f       	adc	r21, r21
 522:	f2 cf       	rjmp	.-28     	; 0x508 <__fp_split3+0xe>
 524:	46 95       	lsr	r20
 526:	f1 df       	rcall	.-30     	; 0x50a <__fp_splitA>
 528:	08 c0       	rjmp	.+16     	; 0x53a <__fp_splitA+0x30>
 52a:	16 16       	cp	r1, r22
 52c:	17 06       	cpc	r1, r23
 52e:	18 06       	cpc	r1, r24
 530:	99 1f       	adc	r25, r25
 532:	f1 cf       	rjmp	.-30     	; 0x516 <__fp_splitA+0xc>
 534:	86 95       	lsr	r24
 536:	71 05       	cpc	r23, r1
 538:	61 05       	cpc	r22, r1
 53a:	08 94       	sec
 53c:	08 95       	ret

0000053e <__fp_zero>:
 53e:	e8 94       	clt

00000540 <__fp_szero>:
 540:	bb 27       	eor	r27, r27
 542:	66 27       	eor	r22, r22
 544:	77 27       	eor	r23, r23
 546:	cb 01       	movw	r24, r22
 548:	97 f9       	bld	r25, 7
 54a:	08 95       	ret

0000054c <itoa>:
 54c:	45 32       	cpi	r20, 0x25	; 37
 54e:	51 05       	cpc	r21, r1
 550:	20 f4       	brcc	.+8      	; 0x55a <itoa+0xe>
 552:	42 30       	cpi	r20, 0x02	; 2
 554:	10 f0       	brcs	.+4      	; 0x55a <itoa+0xe>
 556:	0c 94 b1 02 	jmp	0x562	; 0x562 <__itoa_ncheck>
 55a:	fb 01       	movw	r30, r22
 55c:	10 82       	st	Z, r1
 55e:	cb 01       	movw	r24, r22
 560:	08 95       	ret

00000562 <__itoa_ncheck>:
 562:	bb 27       	eor	r27, r27
 564:	4a 30       	cpi	r20, 0x0A	; 10
 566:	31 f4       	brne	.+12     	; 0x574 <__itoa_ncheck+0x12>
 568:	99 23       	and	r25, r25
 56a:	22 f4       	brpl	.+8      	; 0x574 <__itoa_ncheck+0x12>
 56c:	bd e2       	ldi	r27, 0x2D	; 45
 56e:	90 95       	com	r25
 570:	81 95       	neg	r24
 572:	9f 4f       	sbci	r25, 0xFF	; 255
 574:	0c 94 bd 02 	jmp	0x57a	; 0x57a <__utoa_common>

00000578 <__utoa_ncheck>:
 578:	bb 27       	eor	r27, r27

0000057a <__utoa_common>:
 57a:	fb 01       	movw	r30, r22
 57c:	55 27       	eor	r21, r21
 57e:	aa 27       	eor	r26, r26
 580:	88 0f       	add	r24, r24
 582:	99 1f       	adc	r25, r25
 584:	aa 1f       	adc	r26, r26
 586:	a4 17       	cp	r26, r20
 588:	10 f0       	brcs	.+4      	; 0x58e <__utoa_common+0x14>
 58a:	a4 1b       	sub	r26, r20
 58c:	83 95       	inc	r24
 58e:	50 51       	subi	r21, 0x10	; 16
 590:	b9 f7       	brne	.-18     	; 0x580 <__utoa_common+0x6>
 592:	a0 5d       	subi	r26, 0xD0	; 208
 594:	aa 33       	cpi	r26, 0x3A	; 58
 596:	08 f0       	brcs	.+2      	; 0x59a <__utoa_common+0x20>
 598:	a9 5d       	subi	r26, 0xD9	; 217
 59a:	a1 93       	st	Z+, r26
 59c:	00 97       	sbiw	r24, 0x00	; 0
 59e:	79 f7       	brne	.-34     	; 0x57e <__utoa_common+0x4>
 5a0:	b1 11       	cpse	r27, r1
 5a2:	b1 93       	st	Z+, r27
 5a4:	11 92       	st	Z+, r1
 5a6:	cb 01       	movw	r24, r22
 5a8:	0c 94 d6 02 	jmp	0x5ac	; 0x5ac <strrev>

000005ac <strrev>:
 5ac:	dc 01       	movw	r26, r24
 5ae:	fc 01       	movw	r30, r24
 5b0:	67 2f       	mov	r22, r23
 5b2:	71 91       	ld	r23, Z+
 5b4:	77 23       	and	r23, r23
 5b6:	e1 f7       	brne	.-8      	; 0x5b0 <strrev+0x4>
 5b8:	32 97       	sbiw	r30, 0x02	; 2
 5ba:	04 c0       	rjmp	.+8      	; 0x5c4 <strrev+0x18>
 5bc:	7c 91       	ld	r23, X
 5be:	6d 93       	st	X+, r22
 5c0:	70 83       	st	Z, r23
 5c2:	62 91       	ld	r22, -Z
 5c4:	ae 17       	cp	r26, r30
 5c6:	bf 07       	cpc	r27, r31
 5c8:	c8 f3       	brcs	.-14     	; 0x5bc <strrev+0x10>
 5ca:	08 95       	ret

000005cc <_exit>:
 5cc:	f8 94       	cli

000005ce <__stop_program>:
 5ce:	ff cf       	rjmp	.-2      	; 0x5ce <__stop_program>
