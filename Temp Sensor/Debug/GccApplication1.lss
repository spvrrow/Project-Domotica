
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000008  00800100  00000592  00000626  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000592  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000025  00800108  00800108  0000062e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000062e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000660  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  000006a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000abc  00000000  00000000  00000728  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000882  00000000  00000000  000011e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004b6  00000000  00000000  00001a66  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000017c  00000000  00000000  00001f1c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004b1  00000000  00000000  00002098  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000003be  00000000  00000000  00002549  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000078  00000000  00000000  00002907  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 79 00 	jmp	0xf2	; 0xf2 <__vector_11>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e2 e9       	ldi	r30, 0x92	; 146
  7c:	f5 e0       	ldi	r31, 0x05	; 5
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a8 30       	cpi	r26, 0x08	; 8
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a8 e0       	ldi	r26, 0x08	; 8
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	ad 32       	cpi	r26, 0x2D	; 45
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 26 01 	call	0x24c	; 0x24c <main>
  9e:	0c 94 c7 02 	jmp	0x58e	; 0x58e <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <SCH_Delete_Task>:
unsigned char USART_receive(void){
	
	while(!(UCSR0A & (1<<RXC0)));
	return UDR0;
	
}
  a6:	27 e0       	ldi	r18, 0x07	; 7
  a8:	82 9f       	mul	r24, r18
  aa:	c0 01       	movw	r24, r0
  ac:	11 24       	eor	r1, r1
  ae:	fc 01       	movw	r30, r24
  b0:	e6 5f       	subi	r30, 0xF6	; 246
  b2:	fe 4f       	sbci	r31, 0xFE	; 254
  b4:	11 82       	std	Z+1, r1	; 0x01
  b6:	10 82       	st	Z, r1
  b8:	13 82       	std	Z+3, r1	; 0x03
  ba:	12 82       	std	Z+2, r1	; 0x02
  bc:	15 82       	std	Z+5, r1	; 0x05
  be:	14 82       	std	Z+4, r1	; 0x04
  c0:	16 82       	std	Z+6, r1	; 0x06
  c2:	80 e0       	ldi	r24, 0x00	; 0
  c4:	08 95       	ret

000000c6 <SCH_Init_T1>:
  c6:	cf 93       	push	r28
  c8:	c0 e0       	ldi	r28, 0x00	; 0
  ca:	8c 2f       	mov	r24, r28
  cc:	0e 94 53 00 	call	0xa6	; 0xa6 <SCH_Delete_Task>
  d0:	cf 5f       	subi	r28, 0xFF	; 255
  d2:	c5 30       	cpi	r28, 0x05	; 5
  d4:	d1 f7       	brne	.-12     	; 0xca <SCH_Init_T1+0x4>
  d6:	81 e7       	ldi	r24, 0x71	; 113
  d8:	92 e0       	ldi	r25, 0x02	; 2
  da:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
  de:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
  e2:	8c e0       	ldi	r24, 0x0C	; 12
  e4:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
  e8:	82 e0       	ldi	r24, 0x02	; 2
  ea:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
  ee:	cf 91       	pop	r28
  f0:	08 95       	ret

000000f2 <__vector_11>:
  f2:	1f 92       	push	r1
  f4:	0f 92       	push	r0
  f6:	0f b6       	in	r0, 0x3f	; 63
  f8:	0f 92       	push	r0
  fa:	11 24       	eor	r1, r1
  fc:	2f 93       	push	r18
  fe:	3f 93       	push	r19
 100:	8f 93       	push	r24
 102:	9f 93       	push	r25
 104:	af 93       	push	r26
 106:	bf 93       	push	r27
 108:	ef 93       	push	r30
 10a:	ff 93       	push	r31
 10c:	ea e0       	ldi	r30, 0x0A	; 10
 10e:	f1 e0       	ldi	r31, 0x01	; 1
 110:	2d e2       	ldi	r18, 0x2D	; 45
 112:	31 e0       	ldi	r19, 0x01	; 1
 114:	80 81       	ld	r24, Z
 116:	91 81       	ldd	r25, Z+1	; 0x01
 118:	89 2b       	or	r24, r25
 11a:	91 f0       	breq	.+36     	; 0x140 <__vector_11+0x4e>
 11c:	82 81       	ldd	r24, Z+2	; 0x02
 11e:	93 81       	ldd	r25, Z+3	; 0x03
 120:	00 97       	sbiw	r24, 0x00	; 0
 122:	59 f4       	brne	.+22     	; 0x13a <__vector_11+0x48>
 124:	86 81       	ldd	r24, Z+6	; 0x06
 126:	8f 5f       	subi	r24, 0xFF	; 255
 128:	86 83       	std	Z+6, r24	; 0x06
 12a:	84 81       	ldd	r24, Z+4	; 0x04
 12c:	95 81       	ldd	r25, Z+5	; 0x05
 12e:	00 97       	sbiw	r24, 0x00	; 0
 130:	39 f0       	breq	.+14     	; 0x140 <__vector_11+0x4e>
 132:	01 97       	sbiw	r24, 0x01	; 1
 134:	93 83       	std	Z+3, r25	; 0x03
 136:	82 83       	std	Z+2, r24	; 0x02
 138:	03 c0       	rjmp	.+6      	; 0x140 <__vector_11+0x4e>
 13a:	01 97       	sbiw	r24, 0x01	; 1
 13c:	93 83       	std	Z+3, r25	; 0x03
 13e:	82 83       	std	Z+2, r24	; 0x02
 140:	37 96       	adiw	r30, 0x07	; 7
 142:	e2 17       	cp	r30, r18
 144:	f3 07       	cpc	r31, r19
 146:	31 f7       	brne	.-52     	; 0x114 <__vector_11+0x22>
 148:	ff 91       	pop	r31
 14a:	ef 91       	pop	r30
 14c:	bf 91       	pop	r27
 14e:	af 91       	pop	r26
 150:	9f 91       	pop	r25
 152:	8f 91       	pop	r24
 154:	3f 91       	pop	r19
 156:	2f 91       	pop	r18
 158:	0f 90       	pop	r0
 15a:	0f be       	out	0x3f, r0	; 63
 15c:	0f 90       	pop	r0
 15e:	1f 90       	pop	r1
 160:	18 95       	reti

00000162 <init_adc>:
 162:	80 e6       	ldi	r24, 0x60	; 96
 164:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
 168:	ea e7       	ldi	r30, 0x7A	; 122
 16a:	f0 e0       	ldi	r31, 0x00	; 0
 16c:	80 81       	ld	r24, Z
 16e:	86 60       	ori	r24, 0x06	; 6
 170:	80 83       	st	Z, r24
 172:	08 95       	ret

00000174 <get_adc_value>:
 174:	ea e7       	ldi	r30, 0x7A	; 122
 176:	f0 e0       	ldi	r31, 0x00	; 0
 178:	80 81       	ld	r24, Z
 17a:	80 64       	ori	r24, 0x40	; 64
 17c:	80 83       	st	Z, r24
 17e:	80 81       	ld	r24, Z
 180:	86 fd       	sbrc	r24, 6
 182:	fd cf       	rjmp	.-6      	; 0x17e <get_adc_value+0xa>
 184:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 188:	08 95       	ret

0000018a <uart_init>:
 18a:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 18e:	83 e3       	ldi	r24, 0x33	; 51
 190:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
 194:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
 198:	88 e1       	ldi	r24, 0x18	; 24
 19a:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 19e:	86 e0       	ldi	r24, 0x06	; 6
 1a0:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
 1a4:	08 95       	ret

000001a6 <transmit>:
 1a6:	e0 ec       	ldi	r30, 0xC0	; 192
 1a8:	f0 e0       	ldi	r31, 0x00	; 0
 1aa:	90 81       	ld	r25, Z
 1ac:	95 ff       	sbrs	r25, 5
 1ae:	fd cf       	rjmp	.-6      	; 0x1aa <transmit+0x4>
 1b0:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 1b4:	08 95       	ret

000001b6 <USART_putstring>:
 1b6:	cf 93       	push	r28
 1b8:	df 93       	push	r29
 1ba:	ec 01       	movw	r28, r24
 1bc:	88 81       	ld	r24, Y
 1be:	88 23       	and	r24, r24
 1c0:	31 f0       	breq	.+12     	; 0x1ce <USART_putstring+0x18>
 1c2:	21 96       	adiw	r28, 0x01	; 1
 1c4:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <transmit>
 1c8:	89 91       	ld	r24, Y+
 1ca:	81 11       	cpse	r24, r1
 1cc:	fb cf       	rjmp	.-10     	; 0x1c4 <USART_putstring+0xe>
 1ce:	df 91       	pop	r29
 1d0:	cf 91       	pop	r28
 1d2:	08 95       	ret

000001d4 <serial_conn>:

// MAIN! functie van serial connectie______
int serial_conn(void){
 1d4:	cf 93       	push	r28
 1d6:	df 93       	push	r29
 1d8:	cd b7       	in	r28, 0x3d	; 61
 1da:	de b7       	in	r29, 0x3e	; 62
 1dc:	2a 97       	sbiw	r28, 0x0a	; 10
 1de:	0f b6       	in	r0, 0x3f	; 63
 1e0:	f8 94       	cli
 1e2:	de bf       	out	0x3e, r29	; 62
 1e4:	0f be       	out	0x3f, r0	; 63
 1e6:	cd bf       	out	0x3d, r28	; 61
		//convert int to string
		adc_result0 = get_adc_value();
		int mv = (adc_result0/1024.0)*5000;
		int celcius = mv/10;
		char buffer[10];
		itoa(celcius, buffer, 10);
 1e8:	0a e0       	ldi	r16, 0x0A	; 10
 1ea:	10 e0       	ldi	r17, 0x00	; 0
// MAIN! functie van serial connectie______
int serial_conn(void){
	while (1)
	{
	
		USART_putstring(String);
 1ec:	80 e0       	ldi	r24, 0x00	; 0
 1ee:	91 e0       	ldi	r25, 0x01	; 1
 1f0:	0e 94 db 00 	call	0x1b6	; 0x1b6 <USART_putstring>
		//convert int to string
		adc_result0 = get_adc_value();
 1f4:	0e 94 ba 00 	call	0x174	; 0x174 <get_adc_value>
 1f8:	68 2f       	mov	r22, r24
 1fa:	70 e0       	ldi	r23, 0x00	; 0
 1fc:	70 93 09 01 	sts	0x0109, r23	; 0x800109 <__data_end+0x1>
 200:	60 93 08 01 	sts	0x0108, r22	; 0x800108 <__data_end>
		int mv = (adc_result0/1024.0)*5000;
		int celcius = mv/10;
		char buffer[10];
		itoa(celcius, buffer, 10);
 204:	07 2e       	mov	r0, r23
 206:	00 0c       	add	r0, r0
 208:	88 0b       	sbc	r24, r24
 20a:	99 0b       	sbc	r25, r25
 20c:	0e 94 66 01 	call	0x2cc	; 0x2cc <__floatsisf>
 210:	20 e0       	ldi	r18, 0x00	; 0
 212:	30 e0       	ldi	r19, 0x00	; 0
 214:	40 e8       	ldi	r20, 0x80	; 128
 216:	5a e3       	ldi	r21, 0x3A	; 58
 218:	0e 94 ca 01 	call	0x394	; 0x394 <__mulsf3>
 21c:	20 e0       	ldi	r18, 0x00	; 0
 21e:	30 e4       	ldi	r19, 0x40	; 64
 220:	4c e9       	ldi	r20, 0x9C	; 156
 222:	55 e4       	ldi	r21, 0x45	; 69
 224:	0e 94 ca 01 	call	0x394	; 0x394 <__mulsf3>
 228:	0e 94 2e 01 	call	0x25c	; 0x25c <__fixsfsi>
 22c:	cb 01       	movw	r24, r22
 22e:	b8 01       	movw	r22, r16
 230:	0e 94 5f 02 	call	0x4be	; 0x4be <__divmodhi4>
 234:	cb 01       	movw	r24, r22
 236:	a8 01       	movw	r20, r16
 238:	be 01       	movw	r22, r28
 23a:	6f 5f       	subi	r22, 0xFF	; 255
 23c:	7f 4f       	sbci	r23, 0xFF	; 255
 23e:	0e 94 87 02 	call	0x50e	; 0x50e <itoa>
		USART_putstring(buffer);
 242:	ce 01       	movw	r24, r28
 244:	01 96       	adiw	r24, 0x01	; 1
 246:	0e 94 db 00 	call	0x1b6	; 0x1b6 <USART_putstring>
 24a:	d0 cf       	rjmp	.-96     	; 0x1ec <serial_conn+0x18>

0000024c <main>:
	//initialisatie functies
	/*
	* bijvoorbeeld init_ports();
	*
	*/
	uart_init();
 24c:	0e 94 c5 00 	call	0x18a	; 0x18a <uart_init>
	init_adc();
 250:	0e 94 b1 00 	call	0x162	; 0x162 <init_adc>
	
	SCH_Init_T1();
 254:	0e 94 63 00 	call	0xc6	; 0xc6 <SCH_Init_T1>
	
	// taken uitvoeren en taken die in de scheduler moeten
	// bijvoorbeeld SCH_Add_Task(sensor_start, 0, 50);
	
	SCH_Add_Task(serial_conn(), 0, 5);
 258:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <serial_conn>

0000025c <__fixsfsi>:
 25c:	0e 94 35 01 	call	0x26a	; 0x26a <__fixunssfsi>
 260:	68 94       	set
 262:	b1 11       	cpse	r27, r1
 264:	0c 94 c4 01 	jmp	0x388	; 0x388 <__fp_szero>
 268:	08 95       	ret

0000026a <__fixunssfsi>:
 26a:	0e 94 a9 01 	call	0x352	; 0x352 <__fp_splitA>
 26e:	88 f0       	brcs	.+34     	; 0x292 <__fixunssfsi+0x28>
 270:	9f 57       	subi	r25, 0x7F	; 127
 272:	98 f0       	brcs	.+38     	; 0x29a <__fixunssfsi+0x30>
 274:	b9 2f       	mov	r27, r25
 276:	99 27       	eor	r25, r25
 278:	b7 51       	subi	r27, 0x17	; 23
 27a:	b0 f0       	brcs	.+44     	; 0x2a8 <__fixunssfsi+0x3e>
 27c:	e1 f0       	breq	.+56     	; 0x2b6 <__fixunssfsi+0x4c>
 27e:	66 0f       	add	r22, r22
 280:	77 1f       	adc	r23, r23
 282:	88 1f       	adc	r24, r24
 284:	99 1f       	adc	r25, r25
 286:	1a f0       	brmi	.+6      	; 0x28e <__fixunssfsi+0x24>
 288:	ba 95       	dec	r27
 28a:	c9 f7       	brne	.-14     	; 0x27e <__fixunssfsi+0x14>
 28c:	14 c0       	rjmp	.+40     	; 0x2b6 <__fixunssfsi+0x4c>
 28e:	b1 30       	cpi	r27, 0x01	; 1
 290:	91 f0       	breq	.+36     	; 0x2b6 <__fixunssfsi+0x4c>
 292:	0e 94 c3 01 	call	0x386	; 0x386 <__fp_zero>
 296:	b1 e0       	ldi	r27, 0x01	; 1
 298:	08 95       	ret
 29a:	0c 94 c3 01 	jmp	0x386	; 0x386 <__fp_zero>
 29e:	67 2f       	mov	r22, r23
 2a0:	78 2f       	mov	r23, r24
 2a2:	88 27       	eor	r24, r24
 2a4:	b8 5f       	subi	r27, 0xF8	; 248
 2a6:	39 f0       	breq	.+14     	; 0x2b6 <__fixunssfsi+0x4c>
 2a8:	b9 3f       	cpi	r27, 0xF9	; 249
 2aa:	cc f3       	brlt	.-14     	; 0x29e <__fixunssfsi+0x34>
 2ac:	86 95       	lsr	r24
 2ae:	77 95       	ror	r23
 2b0:	67 95       	ror	r22
 2b2:	b3 95       	inc	r27
 2b4:	d9 f7       	brne	.-10     	; 0x2ac <__fixunssfsi+0x42>
 2b6:	3e f4       	brtc	.+14     	; 0x2c6 <__fixunssfsi+0x5c>
 2b8:	90 95       	com	r25
 2ba:	80 95       	com	r24
 2bc:	70 95       	com	r23
 2be:	61 95       	neg	r22
 2c0:	7f 4f       	sbci	r23, 0xFF	; 255
 2c2:	8f 4f       	sbci	r24, 0xFF	; 255
 2c4:	9f 4f       	sbci	r25, 0xFF	; 255
 2c6:	08 95       	ret

000002c8 <__floatunsisf>:
 2c8:	e8 94       	clt
 2ca:	09 c0       	rjmp	.+18     	; 0x2de <__floatsisf+0x12>

000002cc <__floatsisf>:
 2cc:	97 fb       	bst	r25, 7
 2ce:	3e f4       	brtc	.+14     	; 0x2de <__floatsisf+0x12>
 2d0:	90 95       	com	r25
 2d2:	80 95       	com	r24
 2d4:	70 95       	com	r23
 2d6:	61 95       	neg	r22
 2d8:	7f 4f       	sbci	r23, 0xFF	; 255
 2da:	8f 4f       	sbci	r24, 0xFF	; 255
 2dc:	9f 4f       	sbci	r25, 0xFF	; 255
 2de:	99 23       	and	r25, r25
 2e0:	a9 f0       	breq	.+42     	; 0x30c <__floatsisf+0x40>
 2e2:	f9 2f       	mov	r31, r25
 2e4:	96 e9       	ldi	r25, 0x96	; 150
 2e6:	bb 27       	eor	r27, r27
 2e8:	93 95       	inc	r25
 2ea:	f6 95       	lsr	r31
 2ec:	87 95       	ror	r24
 2ee:	77 95       	ror	r23
 2f0:	67 95       	ror	r22
 2f2:	b7 95       	ror	r27
 2f4:	f1 11       	cpse	r31, r1
 2f6:	f8 cf       	rjmp	.-16     	; 0x2e8 <__floatsisf+0x1c>
 2f8:	fa f4       	brpl	.+62     	; 0x338 <__floatsisf+0x6c>
 2fa:	bb 0f       	add	r27, r27
 2fc:	11 f4       	brne	.+4      	; 0x302 <__floatsisf+0x36>
 2fe:	60 ff       	sbrs	r22, 0
 300:	1b c0       	rjmp	.+54     	; 0x338 <__floatsisf+0x6c>
 302:	6f 5f       	subi	r22, 0xFF	; 255
 304:	7f 4f       	sbci	r23, 0xFF	; 255
 306:	8f 4f       	sbci	r24, 0xFF	; 255
 308:	9f 4f       	sbci	r25, 0xFF	; 255
 30a:	16 c0       	rjmp	.+44     	; 0x338 <__floatsisf+0x6c>
 30c:	88 23       	and	r24, r24
 30e:	11 f0       	breq	.+4      	; 0x314 <__floatsisf+0x48>
 310:	96 e9       	ldi	r25, 0x96	; 150
 312:	11 c0       	rjmp	.+34     	; 0x336 <__floatsisf+0x6a>
 314:	77 23       	and	r23, r23
 316:	21 f0       	breq	.+8      	; 0x320 <__floatsisf+0x54>
 318:	9e e8       	ldi	r25, 0x8E	; 142
 31a:	87 2f       	mov	r24, r23
 31c:	76 2f       	mov	r23, r22
 31e:	05 c0       	rjmp	.+10     	; 0x32a <__floatsisf+0x5e>
 320:	66 23       	and	r22, r22
 322:	71 f0       	breq	.+28     	; 0x340 <__floatsisf+0x74>
 324:	96 e8       	ldi	r25, 0x86	; 134
 326:	86 2f       	mov	r24, r22
 328:	70 e0       	ldi	r23, 0x00	; 0
 32a:	60 e0       	ldi	r22, 0x00	; 0
 32c:	2a f0       	brmi	.+10     	; 0x338 <__floatsisf+0x6c>
 32e:	9a 95       	dec	r25
 330:	66 0f       	add	r22, r22
 332:	77 1f       	adc	r23, r23
 334:	88 1f       	adc	r24, r24
 336:	da f7       	brpl	.-10     	; 0x32e <__floatsisf+0x62>
 338:	88 0f       	add	r24, r24
 33a:	96 95       	lsr	r25
 33c:	87 95       	ror	r24
 33e:	97 f9       	bld	r25, 7
 340:	08 95       	ret

00000342 <__fp_split3>:
 342:	57 fd       	sbrc	r21, 7
 344:	90 58       	subi	r25, 0x80	; 128
 346:	44 0f       	add	r20, r20
 348:	55 1f       	adc	r21, r21
 34a:	59 f0       	breq	.+22     	; 0x362 <__fp_splitA+0x10>
 34c:	5f 3f       	cpi	r21, 0xFF	; 255
 34e:	71 f0       	breq	.+28     	; 0x36c <__fp_splitA+0x1a>
 350:	47 95       	ror	r20

00000352 <__fp_splitA>:
 352:	88 0f       	add	r24, r24
 354:	97 fb       	bst	r25, 7
 356:	99 1f       	adc	r25, r25
 358:	61 f0       	breq	.+24     	; 0x372 <__fp_splitA+0x20>
 35a:	9f 3f       	cpi	r25, 0xFF	; 255
 35c:	79 f0       	breq	.+30     	; 0x37c <__fp_splitA+0x2a>
 35e:	87 95       	ror	r24
 360:	08 95       	ret
 362:	12 16       	cp	r1, r18
 364:	13 06       	cpc	r1, r19
 366:	14 06       	cpc	r1, r20
 368:	55 1f       	adc	r21, r21
 36a:	f2 cf       	rjmp	.-28     	; 0x350 <__fp_split3+0xe>
 36c:	46 95       	lsr	r20
 36e:	f1 df       	rcall	.-30     	; 0x352 <__fp_splitA>
 370:	08 c0       	rjmp	.+16     	; 0x382 <__fp_splitA+0x30>
 372:	16 16       	cp	r1, r22
 374:	17 06       	cpc	r1, r23
 376:	18 06       	cpc	r1, r24
 378:	99 1f       	adc	r25, r25
 37a:	f1 cf       	rjmp	.-30     	; 0x35e <__fp_splitA+0xc>
 37c:	86 95       	lsr	r24
 37e:	71 05       	cpc	r23, r1
 380:	61 05       	cpc	r22, r1
 382:	08 94       	sec
 384:	08 95       	ret

00000386 <__fp_zero>:
 386:	e8 94       	clt

00000388 <__fp_szero>:
 388:	bb 27       	eor	r27, r27
 38a:	66 27       	eor	r22, r22
 38c:	77 27       	eor	r23, r23
 38e:	cb 01       	movw	r24, r22
 390:	97 f9       	bld	r25, 7
 392:	08 95       	ret

00000394 <__mulsf3>:
 394:	0e 94 dd 01 	call	0x3ba	; 0x3ba <__mulsf3x>
 398:	0c 94 4e 02 	jmp	0x49c	; 0x49c <__fp_round>
 39c:	0e 94 40 02 	call	0x480	; 0x480 <__fp_pscA>
 3a0:	38 f0       	brcs	.+14     	; 0x3b0 <__mulsf3+0x1c>
 3a2:	0e 94 47 02 	call	0x48e	; 0x48e <__fp_pscB>
 3a6:	20 f0       	brcs	.+8      	; 0x3b0 <__mulsf3+0x1c>
 3a8:	95 23       	and	r25, r21
 3aa:	11 f0       	breq	.+4      	; 0x3b0 <__mulsf3+0x1c>
 3ac:	0c 94 37 02 	jmp	0x46e	; 0x46e <__fp_inf>
 3b0:	0c 94 3d 02 	jmp	0x47a	; 0x47a <__fp_nan>
 3b4:	11 24       	eor	r1, r1
 3b6:	0c 94 c4 01 	jmp	0x388	; 0x388 <__fp_szero>

000003ba <__mulsf3x>:
 3ba:	0e 94 a1 01 	call	0x342	; 0x342 <__fp_split3>
 3be:	70 f3       	brcs	.-36     	; 0x39c <__mulsf3+0x8>

000003c0 <__mulsf3_pse>:
 3c0:	95 9f       	mul	r25, r21
 3c2:	c1 f3       	breq	.-16     	; 0x3b4 <__mulsf3+0x20>
 3c4:	95 0f       	add	r25, r21
 3c6:	50 e0       	ldi	r21, 0x00	; 0
 3c8:	55 1f       	adc	r21, r21
 3ca:	62 9f       	mul	r22, r18
 3cc:	f0 01       	movw	r30, r0
 3ce:	72 9f       	mul	r23, r18
 3d0:	bb 27       	eor	r27, r27
 3d2:	f0 0d       	add	r31, r0
 3d4:	b1 1d       	adc	r27, r1
 3d6:	63 9f       	mul	r22, r19
 3d8:	aa 27       	eor	r26, r26
 3da:	f0 0d       	add	r31, r0
 3dc:	b1 1d       	adc	r27, r1
 3de:	aa 1f       	adc	r26, r26
 3e0:	64 9f       	mul	r22, r20
 3e2:	66 27       	eor	r22, r22
 3e4:	b0 0d       	add	r27, r0
 3e6:	a1 1d       	adc	r26, r1
 3e8:	66 1f       	adc	r22, r22
 3ea:	82 9f       	mul	r24, r18
 3ec:	22 27       	eor	r18, r18
 3ee:	b0 0d       	add	r27, r0
 3f0:	a1 1d       	adc	r26, r1
 3f2:	62 1f       	adc	r22, r18
 3f4:	73 9f       	mul	r23, r19
 3f6:	b0 0d       	add	r27, r0
 3f8:	a1 1d       	adc	r26, r1
 3fa:	62 1f       	adc	r22, r18
 3fc:	83 9f       	mul	r24, r19
 3fe:	a0 0d       	add	r26, r0
 400:	61 1d       	adc	r22, r1
 402:	22 1f       	adc	r18, r18
 404:	74 9f       	mul	r23, r20
 406:	33 27       	eor	r19, r19
 408:	a0 0d       	add	r26, r0
 40a:	61 1d       	adc	r22, r1
 40c:	23 1f       	adc	r18, r19
 40e:	84 9f       	mul	r24, r20
 410:	60 0d       	add	r22, r0
 412:	21 1d       	adc	r18, r1
 414:	82 2f       	mov	r24, r18
 416:	76 2f       	mov	r23, r22
 418:	6a 2f       	mov	r22, r26
 41a:	11 24       	eor	r1, r1
 41c:	9f 57       	subi	r25, 0x7F	; 127
 41e:	50 40       	sbci	r21, 0x00	; 0
 420:	9a f0       	brmi	.+38     	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
 422:	f1 f0       	breq	.+60     	; 0x460 <__LOCK_REGION_LENGTH__+0x60>
 424:	88 23       	and	r24, r24
 426:	4a f0       	brmi	.+18     	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 428:	ee 0f       	add	r30, r30
 42a:	ff 1f       	adc	r31, r31
 42c:	bb 1f       	adc	r27, r27
 42e:	66 1f       	adc	r22, r22
 430:	77 1f       	adc	r23, r23
 432:	88 1f       	adc	r24, r24
 434:	91 50       	subi	r25, 0x01	; 1
 436:	50 40       	sbci	r21, 0x00	; 0
 438:	a9 f7       	brne	.-22     	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
 43a:	9e 3f       	cpi	r25, 0xFE	; 254
 43c:	51 05       	cpc	r21, r1
 43e:	80 f0       	brcs	.+32     	; 0x460 <__LOCK_REGION_LENGTH__+0x60>
 440:	0c 94 37 02 	jmp	0x46e	; 0x46e <__fp_inf>
 444:	0c 94 c4 01 	jmp	0x388	; 0x388 <__fp_szero>
 448:	5f 3f       	cpi	r21, 0xFF	; 255
 44a:	e4 f3       	brlt	.-8      	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 44c:	98 3e       	cpi	r25, 0xE8	; 232
 44e:	d4 f3       	brlt	.-12     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 450:	86 95       	lsr	r24
 452:	77 95       	ror	r23
 454:	67 95       	ror	r22
 456:	b7 95       	ror	r27
 458:	f7 95       	ror	r31
 45a:	e7 95       	ror	r30
 45c:	9f 5f       	subi	r25, 0xFF	; 255
 45e:	c1 f7       	brne	.-16     	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
 460:	fe 2b       	or	r31, r30
 462:	88 0f       	add	r24, r24
 464:	91 1d       	adc	r25, r1
 466:	96 95       	lsr	r25
 468:	87 95       	ror	r24
 46a:	97 f9       	bld	r25, 7
 46c:	08 95       	ret

0000046e <__fp_inf>:
 46e:	97 f9       	bld	r25, 7
 470:	9f 67       	ori	r25, 0x7F	; 127
 472:	80 e8       	ldi	r24, 0x80	; 128
 474:	70 e0       	ldi	r23, 0x00	; 0
 476:	60 e0       	ldi	r22, 0x00	; 0
 478:	08 95       	ret

0000047a <__fp_nan>:
 47a:	9f ef       	ldi	r25, 0xFF	; 255
 47c:	80 ec       	ldi	r24, 0xC0	; 192
 47e:	08 95       	ret

00000480 <__fp_pscA>:
 480:	00 24       	eor	r0, r0
 482:	0a 94       	dec	r0
 484:	16 16       	cp	r1, r22
 486:	17 06       	cpc	r1, r23
 488:	18 06       	cpc	r1, r24
 48a:	09 06       	cpc	r0, r25
 48c:	08 95       	ret

0000048e <__fp_pscB>:
 48e:	00 24       	eor	r0, r0
 490:	0a 94       	dec	r0
 492:	12 16       	cp	r1, r18
 494:	13 06       	cpc	r1, r19
 496:	14 06       	cpc	r1, r20
 498:	05 06       	cpc	r0, r21
 49a:	08 95       	ret

0000049c <__fp_round>:
 49c:	09 2e       	mov	r0, r25
 49e:	03 94       	inc	r0
 4a0:	00 0c       	add	r0, r0
 4a2:	11 f4       	brne	.+4      	; 0x4a8 <__fp_round+0xc>
 4a4:	88 23       	and	r24, r24
 4a6:	52 f0       	brmi	.+20     	; 0x4bc <__fp_round+0x20>
 4a8:	bb 0f       	add	r27, r27
 4aa:	40 f4       	brcc	.+16     	; 0x4bc <__fp_round+0x20>
 4ac:	bf 2b       	or	r27, r31
 4ae:	11 f4       	brne	.+4      	; 0x4b4 <__fp_round+0x18>
 4b0:	60 ff       	sbrs	r22, 0
 4b2:	04 c0       	rjmp	.+8      	; 0x4bc <__fp_round+0x20>
 4b4:	6f 5f       	subi	r22, 0xFF	; 255
 4b6:	7f 4f       	sbci	r23, 0xFF	; 255
 4b8:	8f 4f       	sbci	r24, 0xFF	; 255
 4ba:	9f 4f       	sbci	r25, 0xFF	; 255
 4bc:	08 95       	ret

000004be <__divmodhi4>:
 4be:	97 fb       	bst	r25, 7
 4c0:	07 2e       	mov	r0, r23
 4c2:	16 f4       	brtc	.+4      	; 0x4c8 <__divmodhi4+0xa>
 4c4:	00 94       	com	r0
 4c6:	07 d0       	rcall	.+14     	; 0x4d6 <__divmodhi4_neg1>
 4c8:	77 fd       	sbrc	r23, 7
 4ca:	09 d0       	rcall	.+18     	; 0x4de <__divmodhi4_neg2>
 4cc:	0e 94 73 02 	call	0x4e6	; 0x4e6 <__udivmodhi4>
 4d0:	07 fc       	sbrc	r0, 7
 4d2:	05 d0       	rcall	.+10     	; 0x4de <__divmodhi4_neg2>
 4d4:	3e f4       	brtc	.+14     	; 0x4e4 <__divmodhi4_exit>

000004d6 <__divmodhi4_neg1>:
 4d6:	90 95       	com	r25
 4d8:	81 95       	neg	r24
 4da:	9f 4f       	sbci	r25, 0xFF	; 255
 4dc:	08 95       	ret

000004de <__divmodhi4_neg2>:
 4de:	70 95       	com	r23
 4e0:	61 95       	neg	r22
 4e2:	7f 4f       	sbci	r23, 0xFF	; 255

000004e4 <__divmodhi4_exit>:
 4e4:	08 95       	ret

000004e6 <__udivmodhi4>:
 4e6:	aa 1b       	sub	r26, r26
 4e8:	bb 1b       	sub	r27, r27
 4ea:	51 e1       	ldi	r21, 0x11	; 17
 4ec:	07 c0       	rjmp	.+14     	; 0x4fc <__udivmodhi4_ep>

000004ee <__udivmodhi4_loop>:
 4ee:	aa 1f       	adc	r26, r26
 4f0:	bb 1f       	adc	r27, r27
 4f2:	a6 17       	cp	r26, r22
 4f4:	b7 07       	cpc	r27, r23
 4f6:	10 f0       	brcs	.+4      	; 0x4fc <__udivmodhi4_ep>
 4f8:	a6 1b       	sub	r26, r22
 4fa:	b7 0b       	sbc	r27, r23

000004fc <__udivmodhi4_ep>:
 4fc:	88 1f       	adc	r24, r24
 4fe:	99 1f       	adc	r25, r25
 500:	5a 95       	dec	r21
 502:	a9 f7       	brne	.-22     	; 0x4ee <__udivmodhi4_loop>
 504:	80 95       	com	r24
 506:	90 95       	com	r25
 508:	bc 01       	movw	r22, r24
 50a:	cd 01       	movw	r24, r26
 50c:	08 95       	ret

0000050e <itoa>:
 50e:	45 32       	cpi	r20, 0x25	; 37
 510:	51 05       	cpc	r21, r1
 512:	20 f4       	brcc	.+8      	; 0x51c <itoa+0xe>
 514:	42 30       	cpi	r20, 0x02	; 2
 516:	10 f0       	brcs	.+4      	; 0x51c <itoa+0xe>
 518:	0c 94 92 02 	jmp	0x524	; 0x524 <__itoa_ncheck>
 51c:	fb 01       	movw	r30, r22
 51e:	10 82       	st	Z, r1
 520:	cb 01       	movw	r24, r22
 522:	08 95       	ret

00000524 <__itoa_ncheck>:
 524:	bb 27       	eor	r27, r27
 526:	4a 30       	cpi	r20, 0x0A	; 10
 528:	31 f4       	brne	.+12     	; 0x536 <__itoa_ncheck+0x12>
 52a:	99 23       	and	r25, r25
 52c:	22 f4       	brpl	.+8      	; 0x536 <__itoa_ncheck+0x12>
 52e:	bd e2       	ldi	r27, 0x2D	; 45
 530:	90 95       	com	r25
 532:	81 95       	neg	r24
 534:	9f 4f       	sbci	r25, 0xFF	; 255
 536:	0c 94 9e 02 	jmp	0x53c	; 0x53c <__utoa_common>

0000053a <__utoa_ncheck>:
 53a:	bb 27       	eor	r27, r27

0000053c <__utoa_common>:
 53c:	fb 01       	movw	r30, r22
 53e:	55 27       	eor	r21, r21
 540:	aa 27       	eor	r26, r26
 542:	88 0f       	add	r24, r24
 544:	99 1f       	adc	r25, r25
 546:	aa 1f       	adc	r26, r26
 548:	a4 17       	cp	r26, r20
 54a:	10 f0       	brcs	.+4      	; 0x550 <__utoa_common+0x14>
 54c:	a4 1b       	sub	r26, r20
 54e:	83 95       	inc	r24
 550:	50 51       	subi	r21, 0x10	; 16
 552:	b9 f7       	brne	.-18     	; 0x542 <__utoa_common+0x6>
 554:	a0 5d       	subi	r26, 0xD0	; 208
 556:	aa 33       	cpi	r26, 0x3A	; 58
 558:	08 f0       	brcs	.+2      	; 0x55c <__utoa_common+0x20>
 55a:	a9 5d       	subi	r26, 0xD9	; 217
 55c:	a1 93       	st	Z+, r26
 55e:	00 97       	sbiw	r24, 0x00	; 0
 560:	79 f7       	brne	.-34     	; 0x540 <__utoa_common+0x4>
 562:	b1 11       	cpse	r27, r1
 564:	b1 93       	st	Z+, r27
 566:	11 92       	st	Z+, r1
 568:	cb 01       	movw	r24, r22
 56a:	0c 94 b7 02 	jmp	0x56e	; 0x56e <strrev>

0000056e <strrev>:
 56e:	dc 01       	movw	r26, r24
 570:	fc 01       	movw	r30, r24
 572:	67 2f       	mov	r22, r23
 574:	71 91       	ld	r23, Z+
 576:	77 23       	and	r23, r23
 578:	e1 f7       	brne	.-8      	; 0x572 <strrev+0x4>
 57a:	32 97       	sbiw	r30, 0x02	; 2
 57c:	04 c0       	rjmp	.+8      	; 0x586 <strrev+0x18>
 57e:	7c 91       	ld	r23, X
 580:	6d 93       	st	X+, r22
 582:	70 83       	st	Z, r23
 584:	62 91       	ld	r22, -Z
 586:	ae 17       	cp	r26, r30
 588:	bf 07       	cpc	r27, r31
 58a:	c8 f3       	brcs	.-14     	; 0x57e <strrev+0x10>
 58c:	08 95       	ret

0000058e <_exit>:
 58e:	f8 94       	cli

00000590 <__stop_program>:
 590:	ff cf       	rjmp	.-2      	; 0x590 <__stop_program>
