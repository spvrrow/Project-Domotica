
Distance test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000a  00800100  000003c0  00000454  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000003c0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000003  0080010a  0080010a  0000045e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000045e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000490  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000070  00000000  00000000  000004d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000c1b  00000000  00000000  00000540  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000817  00000000  00000000  0000115b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000529  00000000  00000000  00001972  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000124  00000000  00000000  00001e9c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000046c  00000000  00000000  00001fc0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000004dd  00000000  00000000  0000242c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000060  00000000  00000000  00002909  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 8f 01 	jmp	0x31e	; 0x31e <__vector_2>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e0 ec       	ldi	r30, 0xC0	; 192
  7c:	f3 e0       	ldi	r31, 0x03	; 3
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	aa 30       	cpi	r26, 0x0A	; 10
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	aa e0       	ldi	r26, 0x0A	; 10
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	ad 30       	cpi	r26, 0x0D	; 13
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <main>
  9e:	0c 94 de 01 	jmp	0x3bc	; 0x3bc <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <write>:


uint16_t calc_cm(uint16_t counter)
{
    return (gv_counter / 16)/58;
}
  a6:	61 11       	cpse	r22, r1
  a8:	0e c0       	rjmp	.+28     	; 0xc6 <write+0x20>
  aa:	45 b1       	in	r20, 0x05	; 5
  ac:	21 e0       	ldi	r18, 0x01	; 1
  ae:	30 e0       	ldi	r19, 0x00	; 0
  b0:	b9 01       	movw	r22, r18
  b2:	02 c0       	rjmp	.+4      	; 0xb8 <write+0x12>
  b4:	66 0f       	add	r22, r22
  b6:	77 1f       	adc	r23, r23
  b8:	8a 95       	dec	r24
  ba:	e2 f7       	brpl	.-8      	; 0xb4 <write+0xe>
  bc:	cb 01       	movw	r24, r22
  be:	80 95       	com	r24
  c0:	84 23       	and	r24, r20
  c2:	85 b9       	out	0x05, r24	; 5
  c4:	08 95       	ret
  c6:	45 b1       	in	r20, 0x05	; 5
  c8:	21 e0       	ldi	r18, 0x01	; 1
  ca:	30 e0       	ldi	r19, 0x00	; 0
  cc:	b9 01       	movw	r22, r18
  ce:	02 c0       	rjmp	.+4      	; 0xd4 <write+0x2e>
  d0:	66 0f       	add	r22, r22
  d2:	77 1f       	adc	r23, r23
  d4:	8a 95       	dec	r24
  d6:	e2 f7       	brpl	.-8      	; 0xd0 <write+0x2a>
  d8:	cb 01       	movw	r24, r22
  da:	84 2b       	or	r24, r20
  dc:	85 b9       	out	0x05, r24	; 5
  de:	08 95       	ret

000000e0 <shiftOut>:
  e0:	cf 93       	push	r28
  e2:	df 93       	push	r29
  e4:	d8 2f       	mov	r29, r24
  e6:	c8 e0       	ldi	r28, 0x08	; 8
  e8:	60 e0       	ldi	r22, 0x00	; 0
  ea:	81 e0       	ldi	r24, 0x01	; 1
  ec:	0e 94 53 00 	call	0xa6	; 0xa6 <write>
  f0:	6d 2f       	mov	r22, r29
  f2:	61 70       	andi	r22, 0x01	; 1
  f4:	80 e0       	ldi	r24, 0x00	; 0
  f6:	0e 94 53 00 	call	0xa6	; 0xa6 <write>
  fa:	d6 95       	lsr	r29
  fc:	61 e0       	ldi	r22, 0x01	; 1
  fe:	81 e0       	ldi	r24, 0x01	; 1
 100:	0e 94 53 00 	call	0xa6	; 0xa6 <write>
 104:	c1 50       	subi	r28, 0x01	; 1
 106:	81 f7       	brne	.-32     	; 0xe8 <shiftOut+0x8>
 108:	df 91       	pop	r29
 10a:	cf 91       	pop	r28
 10c:	08 95       	ret

0000010e <show_distance>:
 10e:	ef 92       	push	r14
 110:	ff 92       	push	r15
 112:	0f 93       	push	r16
 114:	1f 93       	push	r17
 116:	cf 93       	push	r28
 118:	df 93       	push	r29
 11a:	cd b7       	in	r28, 0x3d	; 61
 11c:	de b7       	in	r29, 0x3e	; 62
 11e:	62 97       	sbiw	r28, 0x12	; 18
 120:	0f b6       	in	r0, 0x3f	; 63
 122:	f8 94       	cli
 124:	de bf       	out	0x3e, r29	; 62
 126:	0f be       	out	0x3f, r0	; 63
 128:	cd bf       	out	0x3d, r28	; 61
 12a:	ac 01       	movw	r20, r24
 12c:	8a e0       	ldi	r24, 0x0A	; 10
 12e:	e0 e0       	ldi	r30, 0x00	; 0
 130:	f1 e0       	ldi	r31, 0x01	; 1
 132:	de 01       	movw	r26, r28
 134:	11 96       	adiw	r26, 0x01	; 1
 136:	01 90       	ld	r0, Z+
 138:	0d 92       	st	X+, r0
 13a:	8a 95       	dec	r24
 13c:	e1 f7       	brne	.-8      	; 0x136 <show_distance+0x28>
 13e:	fe 01       	movw	r30, r28
 140:	3b 96       	adiw	r30, 0x0b	; 11
 142:	88 e0       	ldi	r24, 0x08	; 8
 144:	df 01       	movw	r26, r30
 146:	1d 92       	st	X+, r1
 148:	8a 95       	dec	r24
 14a:	e9 f7       	brne	.-6      	; 0x146 <show_distance+0x38>
 14c:	41 15       	cp	r20, r1
 14e:	51 05       	cpc	r21, r1
 150:	89 f1       	breq	.+98     	; 0x1b4 <show_distance+0xa6>
 152:	7f 01       	movw	r14, r30
 154:	e0 e0       	ldi	r30, 0x00	; 0
 156:	9a 01       	movw	r18, r20
 158:	ad ec       	ldi	r26, 0xCD	; 205
 15a:	bc ec       	ldi	r27, 0xCC	; 204
 15c:	0e 94 cf 01 	call	0x39e	; 0x39e <__umulhisi3>
 160:	96 95       	lsr	r25
 162:	87 95       	ror	r24
 164:	96 95       	lsr	r25
 166:	87 95       	ror	r24
 168:	96 95       	lsr	r25
 16a:	87 95       	ror	r24
 16c:	9c 01       	movw	r18, r24
 16e:	22 0f       	add	r18, r18
 170:	33 1f       	adc	r19, r19
 172:	88 0f       	add	r24, r24
 174:	99 1f       	adc	r25, r25
 176:	88 0f       	add	r24, r24
 178:	99 1f       	adc	r25, r25
 17a:	88 0f       	add	r24, r24
 17c:	99 1f       	adc	r25, r25
 17e:	82 0f       	add	r24, r18
 180:	93 1f       	adc	r25, r19
 182:	9a 01       	movw	r18, r20
 184:	28 1b       	sub	r18, r24
 186:	39 0b       	sbc	r19, r25
 188:	d7 01       	movw	r26, r14
 18a:	2d 93       	st	X+, r18
 18c:	7d 01       	movw	r14, r26
 18e:	9a 01       	movw	r18, r20
 190:	ad ec       	ldi	r26, 0xCD	; 205
 192:	bc ec       	ldi	r27, 0xCC	; 204
 194:	0e 94 cf 01 	call	0x39e	; 0x39e <__umulhisi3>
 198:	ac 01       	movw	r20, r24
 19a:	56 95       	lsr	r21
 19c:	47 95       	ror	r20
 19e:	56 95       	lsr	r21
 1a0:	47 95       	ror	r20
 1a2:	56 95       	lsr	r21
 1a4:	47 95       	ror	r20
 1a6:	ef 5f       	subi	r30, 0xFF	; 255
 1a8:	41 15       	cp	r20, r1
 1aa:	51 05       	cpc	r21, r1
 1ac:	21 f0       	breq	.+8      	; 0x1b6 <show_distance+0xa8>
 1ae:	e8 30       	cpi	r30, 0x08	; 8
 1b0:	91 f6       	brne	.-92     	; 0x156 <show_distance+0x48>
 1b2:	01 c0       	rjmp	.+2      	; 0x1b6 <show_distance+0xa8>
 1b4:	e0 e0       	ldi	r30, 0x00	; 0
 1b6:	08 e0       	ldi	r16, 0x08	; 8
 1b8:	0e 1b       	sub	r16, r30
 1ba:	fe 01       	movw	r30, r28
 1bc:	73 96       	adiw	r30, 0x13	; 19
 1be:	9e 01       	movw	r18, r28
 1c0:	25 5f       	subi	r18, 0xF5	; 245
 1c2:	3f 4f       	sbci	r19, 0xFF	; 255
 1c4:	79 01       	movw	r14, r18
 1c6:	2c 5f       	subi	r18, 0xFC	; 252
 1c8:	3f 4f       	sbci	r19, 0xFF	; 255
 1ca:	d7 01       	movw	r26, r14
 1cc:	8c 91       	ld	r24, X
 1ce:	92 91       	ld	r25, -Z
 1d0:	9d 93       	st	X+, r25
 1d2:	80 83       	st	Z, r24
 1d4:	e2 17       	cp	r30, r18
 1d6:	f3 07       	cpc	r31, r19
 1d8:	c9 f7       	brne	.-14     	; 0x1cc <show_distance+0xbe>
 1da:	60 e0       	ldi	r22, 0x00	; 0
 1dc:	82 e0       	ldi	r24, 0x02	; 2
 1de:	0e 94 53 00 	call	0xa6	; 0xa6 <write>
 1e2:	80 ec       	ldi	r24, 0xC0	; 192
 1e4:	0e 94 70 00 	call	0xe0	; 0xe0 <shiftOut>
 1e8:	10 e0       	ldi	r17, 0x00	; 0
 1ea:	10 17       	cp	r17, r16
 1ec:	20 f4       	brcc	.+8      	; 0x1f6 <show_distance+0xe8>
 1ee:	80 e0       	ldi	r24, 0x00	; 0
 1f0:	0e 94 70 00 	call	0xe0	; 0xe0 <shiftOut>
 1f4:	0b c0       	rjmp	.+22     	; 0x20c <show_distance+0xfe>
 1f6:	d7 01       	movw	r26, r14
 1f8:	8c 91       	ld	r24, X
 1fa:	e1 e0       	ldi	r30, 0x01	; 1
 1fc:	f0 e0       	ldi	r31, 0x00	; 0
 1fe:	ec 0f       	add	r30, r28
 200:	fd 1f       	adc	r31, r29
 202:	e8 0f       	add	r30, r24
 204:	f1 1d       	adc	r31, r1
 206:	80 81       	ld	r24, Z
 208:	0e 94 70 00 	call	0xe0	; 0xe0 <shiftOut>
 20c:	80 e0       	ldi	r24, 0x00	; 0
 20e:	0e 94 70 00 	call	0xe0	; 0xe0 <shiftOut>
 212:	1f 5f       	subi	r17, 0xFF	; 255
 214:	bf ef       	ldi	r27, 0xFF	; 255
 216:	eb 1a       	sub	r14, r27
 218:	fb 0a       	sbc	r15, r27
 21a:	18 30       	cpi	r17, 0x08	; 8
 21c:	31 f7       	brne	.-52     	; 0x1ea <show_distance+0xdc>
 21e:	61 e0       	ldi	r22, 0x01	; 1
 220:	82 e0       	ldi	r24, 0x02	; 2
 222:	0e 94 53 00 	call	0xa6	; 0xa6 <write>
 226:	62 96       	adiw	r28, 0x12	; 18
 228:	0f b6       	in	r0, 0x3f	; 63
 22a:	f8 94       	cli
 22c:	de bf       	out	0x3e, r29	; 62
 22e:	0f be       	out	0x3f, r0	; 63
 230:	cd bf       	out	0x3d, r28	; 61
 232:	df 91       	pop	r29
 234:	cf 91       	pop	r28
 236:	1f 91       	pop	r17
 238:	0f 91       	pop	r16
 23a:	ff 90       	pop	r15
 23c:	ef 90       	pop	r14
 23e:	08 95       	ret

00000240 <sendCommand>:
 240:	cf 93       	push	r28
 242:	c8 2f       	mov	r28, r24
 244:	60 e0       	ldi	r22, 0x00	; 0
 246:	82 e0       	ldi	r24, 0x02	; 2
 248:	0e 94 53 00 	call	0xa6	; 0xa6 <write>
 24c:	8c 2f       	mov	r24, r28
 24e:	0e 94 70 00 	call	0xe0	; 0xe0 <shiftOut>
 252:	61 e0       	ldi	r22, 0x01	; 1
 254:	82 e0       	ldi	r24, 0x02	; 2
 256:	0e 94 53 00 	call	0xa6	; 0xa6 <write>
 25a:	cf 91       	pop	r28
 25c:	08 95       	ret

0000025e <reset_display>:
 25e:	cf 93       	push	r28
 260:	80 e4       	ldi	r24, 0x40	; 64
 262:	0e 94 20 01 	call	0x240	; 0x240 <sendCommand>
 266:	60 e0       	ldi	r22, 0x00	; 0
 268:	82 e0       	ldi	r24, 0x02	; 2
 26a:	0e 94 53 00 	call	0xa6	; 0xa6 <write>
 26e:	80 ec       	ldi	r24, 0xC0	; 192
 270:	0e 94 70 00 	call	0xe0	; 0xe0 <shiftOut>
 274:	c0 e1       	ldi	r28, 0x10	; 16
 276:	80 e0       	ldi	r24, 0x00	; 0
 278:	0e 94 70 00 	call	0xe0	; 0xe0 <shiftOut>
 27c:	c1 50       	subi	r28, 0x01	; 1
 27e:	d9 f7       	brne	.-10     	; 0x276 <reset_display+0x18>
 280:	61 e0       	ldi	r22, 0x01	; 1
 282:	82 e0       	ldi	r24, 0x02	; 2
 284:	0e 94 53 00 	call	0xa6	; 0xa6 <write>
 288:	89 e8       	ldi	r24, 0x89	; 137
 28a:	0e 94 20 01 	call	0x240	; 0x240 <sendCommand>
 28e:	cf 91       	pop	r28
 290:	08 95       	ret

00000292 <init_ports>:
 292:	81 e0       	ldi	r24, 0x01	; 1
 294:	8a b9       	out	0x0a, r24	; 10
 296:	87 ef       	ldi	r24, 0xF7	; 247
 298:	8a b9       	out	0x0a, r24	; 10
 29a:	8f ef       	ldi	r24, 0xFF	; 255
 29c:	84 b9       	out	0x04, r24	; 4
 29e:	08 95       	ret

000002a0 <init_timer>:
 2a0:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
 2a4:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 2a8:	08 95       	ret

000002aa <init_ext_int>:
 2aa:	84 e0       	ldi	r24, 0x04	; 4
 2ac:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__TEXT_REGION_LENGTH__+0x7e0069>
 2b0:	82 e0       	ldi	r24, 0x02	; 2
 2b2:	8d bb       	out	0x1d, r24	; 29
 2b4:	08 95       	ret

000002b6 <main>:

int main(void)
{
    init_ports();
 2b6:	0e 94 49 01 	call	0x292	; 0x292 <init_ports>
	init_timer();
 2ba:	0e 94 50 01 	call	0x2a0	; 0x2a0 <init_timer>
	reset_display();
 2be:	0e 94 2f 01 	call	0x25e	; 0x25e <reset_display>
	init_ext_int();
 2c2:	0e 94 55 01 	call	0x2aa	; 0x2aa <init_ext_int>
	sei();
 2c6:	78 94       	sei
	while (1)
	{
		gv_echo = BEGIN;
 2c8:	11 e0       	ldi	r17, 0x01	; 1
		PORTD |= _BV(0);
		_delay_us(12);
		PORTD = 0x00;
		_delay_ms(30);
		int tmp = calc_cm(gv_counter);
		show_distance(tmp);
 2ca:	c0 ea       	ldi	r28, 0xA0	; 160
 2cc:	d3 e0       	ldi	r29, 0x03	; 3
	reset_display();
	init_ext_int();
	sei();
	while (1)
	{
		gv_echo = BEGIN;
 2ce:	10 93 0a 01 	sts	0x010A, r17	; 0x80010a <__data_end>
		PORTD |= _BV(0);
 2d2:	58 9a       	sbi	0x0b, 0	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2d4:	20 e4       	ldi	r18, 0x40	; 64
 2d6:	2a 95       	dec	r18
 2d8:	f1 f7       	brne	.-4      	; 0x2d6 <main+0x20>
		_delay_us(12);
		PORTD = 0x00;
 2da:	1b b8       	out	0x0b, r1	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2dc:	8f ef       	ldi	r24, 0xFF	; 255
 2de:	96 e7       	ldi	r25, 0x76	; 118
 2e0:	21 e0       	ldi	r18, 0x01	; 1
 2e2:	81 50       	subi	r24, 0x01	; 1
 2e4:	90 40       	sbci	r25, 0x00	; 0
 2e6:	20 40       	sbci	r18, 0x00	; 0
 2e8:	e1 f7       	brne	.-8      	; 0x2e2 <main+0x2c>
 2ea:	00 c0       	rjmp	.+0      	; 0x2ec <main+0x36>
 2ec:	00 00       	nop
		_delay_ms(30);
		int tmp = calc_cm(gv_counter);
 2ee:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <gv_counter>
 2f2:	90 91 0c 01 	lds	r25, 0x010C	; 0x80010c <gv_counter+0x1>
}


uint16_t calc_cm(uint16_t counter)
{
    return (gv_counter / 16)/58;
 2f6:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <gv_counter>
 2fa:	90 91 0c 01 	lds	r25, 0x010C	; 0x80010c <gv_counter+0x1>
		PORTD |= _BV(0);
		_delay_us(12);
		PORTD = 0x00;
		_delay_ms(30);
		int tmp = calc_cm(gv_counter);
		show_distance(tmp);
 2fe:	be 01       	movw	r22, r28
 300:	0e 94 bb 01 	call	0x376	; 0x376 <__udivmodhi4>
 304:	cb 01       	movw	r24, r22
 306:	0e 94 87 00 	call	0x10e	; 0x10e <show_distance>
 30a:	8f ef       	ldi	r24, 0xFF	; 255
 30c:	99 e6       	ldi	r25, 0x69	; 105
 30e:	28 e1       	ldi	r18, 0x18	; 24
 310:	81 50       	subi	r24, 0x01	; 1
 312:	90 40       	sbci	r25, 0x00	; 0
 314:	20 40       	sbci	r18, 0x00	; 0
 316:	e1 f7       	brne	.-8      	; 0x310 <main+0x5a>
 318:	00 c0       	rjmp	.+0      	; 0x31a <main+0x64>
 31a:	00 00       	nop
 31c:	d8 cf       	rjmp	.-80     	; 0x2ce <main+0x18>

0000031e <__vector_2>:
	
	
}

ISR (INT1_vect)
{
 31e:	1f 92       	push	r1
 320:	0f 92       	push	r0
 322:	0f b6       	in	r0, 0x3f	; 63
 324:	0f 92       	push	r0
 326:	11 24       	eor	r1, r1
 328:	8f 93       	push	r24
 32a:	9f 93       	push	r25
 32c:	ef 93       	push	r30
 32e:	ff 93       	push	r31
    if(gv_echo == BEGIN)
 330:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <__data_end>
 334:	81 30       	cpi	r24, 0x01	; 1
 336:	61 f4       	brne	.+24     	; 0x350 <__vector_2+0x32>
	{
		TCNT1 = 0;
 338:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 33c:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
		TCCR1B |= (1 << CS10);
 340:	e1 e8       	ldi	r30, 0x81	; 129
 342:	f0 e0       	ldi	r31, 0x00	; 0
 344:	80 81       	ld	r24, Z
 346:	81 60       	ori	r24, 0x01	; 1
 348:	80 83       	st	Z, r24
		gv_echo = END;	
 34a:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <__data_end>
 34e:	0a c0       	rjmp	.+20     	; 0x364 <__vector_2+0x46>
	}
	else {
		TCCR1B = 0;
 350:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
		gv_counter = TCNT1;
 354:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 358:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 35c:	90 93 0c 01 	sts	0x010C, r25	; 0x80010c <gv_counter+0x1>
 360:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <gv_counter>
	}
}
 364:	ff 91       	pop	r31
 366:	ef 91       	pop	r30
 368:	9f 91       	pop	r25
 36a:	8f 91       	pop	r24
 36c:	0f 90       	pop	r0
 36e:	0f be       	out	0x3f, r0	; 63
 370:	0f 90       	pop	r0
 372:	1f 90       	pop	r1
 374:	18 95       	reti

00000376 <__udivmodhi4>:
 376:	aa 1b       	sub	r26, r26
 378:	bb 1b       	sub	r27, r27
 37a:	51 e1       	ldi	r21, 0x11	; 17
 37c:	07 c0       	rjmp	.+14     	; 0x38c <__udivmodhi4_ep>

0000037e <__udivmodhi4_loop>:
 37e:	aa 1f       	adc	r26, r26
 380:	bb 1f       	adc	r27, r27
 382:	a6 17       	cp	r26, r22
 384:	b7 07       	cpc	r27, r23
 386:	10 f0       	brcs	.+4      	; 0x38c <__udivmodhi4_ep>
 388:	a6 1b       	sub	r26, r22
 38a:	b7 0b       	sbc	r27, r23

0000038c <__udivmodhi4_ep>:
 38c:	88 1f       	adc	r24, r24
 38e:	99 1f       	adc	r25, r25
 390:	5a 95       	dec	r21
 392:	a9 f7       	brne	.-22     	; 0x37e <__udivmodhi4_loop>
 394:	80 95       	com	r24
 396:	90 95       	com	r25
 398:	bc 01       	movw	r22, r24
 39a:	cd 01       	movw	r24, r26
 39c:	08 95       	ret

0000039e <__umulhisi3>:
 39e:	a2 9f       	mul	r26, r18
 3a0:	b0 01       	movw	r22, r0
 3a2:	b3 9f       	mul	r27, r19
 3a4:	c0 01       	movw	r24, r0
 3a6:	a3 9f       	mul	r26, r19
 3a8:	70 0d       	add	r23, r0
 3aa:	81 1d       	adc	r24, r1
 3ac:	11 24       	eor	r1, r1
 3ae:	91 1d       	adc	r25, r1
 3b0:	b2 9f       	mul	r27, r18
 3b2:	70 0d       	add	r23, r0
 3b4:	81 1d       	adc	r24, r1
 3b6:	11 24       	eor	r1, r1
 3b8:	91 1d       	adc	r25, r1
 3ba:	08 95       	ret

000003bc <_exit>:
 3bc:	f8 94       	cli

000003be <__stop_program>:
 3be:	ff cf       	rjmp	.-2      	; 0x3be <__stop_program>
